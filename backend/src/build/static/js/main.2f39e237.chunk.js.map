{"version":3,"sources":["pages/homepage.js","pages/callback.js","pages/map.js","utilities/layout-engine/layout-engine.js","utilities/layout-engine/none.js","utilities/layout-engine/snap-to-grid.js","utilities/layout-engine/layout-engine-config.js","utilities/layout-engine/vertical-tree.js","utilities/layout-engine/horizontal-tree.js","components/background.js","components/arrowhead-marker.js","components/circle.js","components/background-pattern.js","components/dropshadow-filter.js","components/defs.js","utilities/graph-util.js","components/edge.js","components/graph-controls.js","components/node-text.js","components/node.js","components/graph-view.js","pages/graph-config.js","pages/graph.js","App.js","serviceWorker.js","index.js"],"names":["querystring","require","HomePage","a","authAPI","stringify","client_id","response_type","redirect_uri","window","location","onClick","login","Callback","useState","artist1","setArtist1","artist2","setArtist2","token","String","split","type","value","onChange","event","target","localStorage","setItem","Map","getItem","fetch","method","body","JSON","headers","result","json","fetchData","LayoutEngine","graphViewProps","this","node","nodes","nodesMap","i","length","position","calculatePosition","x","y","None","SnapToGrid","gridSpacing","gridOffset","newX","newY","multiplier","Math","round","LayoutEngines","VerticalTree","nodeKey","nodeSize","nodeHeight","nodeWidth","nodeSpacingMultiplier","g","dagre","Graph","setGraph","setDefaultEdgeLabel","height","width","spacing","size","forEach","nodeId","nodeKeyId","nodesMapNode","incomingEdges","outgoingEdges","setNode","edge","setEdge","gNodeId","gNode","HorizontalTree","nodeSizeOverridesAllowed","nodeLocationOverrides","graphConfig","Object","assign","rankdir","sizeOverrides","widthOverride","heightOverride","hasOwnProperty","locationOverride","Background","props","gridSize","backgroundFillId","renderBackground","className","fill","React","defaultProps","ArrowheadMarker","edgeArrowSize","id","key","viewBox","refX","markerWidth","markerHeight","orient","d","Circle","gridDotSize","cx","cy","r","BackgroundPattern","patternUnits","DropshadowFilter","in","stdDeviation","dx","dy","slope","Defs","state","graphConfigDefs","nextProps","prevState","processGraphConfigDefs","nodeTypes","nodeSubtypes","edgeTypes","typesObj","keys","safeId","shapeId","replace","push","shape","renderDefs","GraphUtils","map","arr","item","children","originalArrIndex","parents","source","edges","nodeMapSourceNode","nodeMapTargetNode","container","document","getElementById","parentNode","removeChild","element","selector","matches","findParent","args","arg","Array","isArray","join","trim","count","chunksize","callback","finished","chunk","end","min","call","setTimeout","prevNode","newNode","isEqual","fastDeepEqual","Edge","getEdgeHandleTranslation","data","pathDescription","getPathDescription","pathDescriptionArr","diffX","parseFloat","diffY","getEdgeHandleOffsetTranslation","offset","edgeHandleSize","getEdgeHandleRotation","negate","rotated","src","sourceNode","trg","targetNode","theta","getTheta","PI","getEdgeHandleTransformation","translation","rotation","rotateEdgeHandle","edgeOverlayRef","pt1","pt2","xComp","yComp","atan2","srcTrgDataArray","d3","viewWrapperElem","defEndArrowElement","querySelector","getBoundingClientRect","edgePathElement","response","getAttribute","dArr","dimension","xOff","yOff","intersect","point","defSvgRotatedRectElement","includesArrow","getDefaultIntersectResponse","arrowSize","getArrowSize","clientRect","widthAttr","heightAttr","w","h","trgX","trgY","srcX","srcY","top","bottom","left","right","line","x1","y1","x2","y2","rect","topLeft","Point2D","bottomRight","poly","center","lerp","transform","rotate","angle","Matrix2D","rotationAt","rotatedPoly","p","pathIntersect","Intersection","intersectLinePolygon","params","points","arrowWidth","arrowHeight","xIntersect","yIntersect","defSvgPathElement","test","val","index","isEnd","yIntersectDiff","abs","xIntersectDiff","defSvgCircleElement","parentElement","parentWidth","parentHeight","arrowOffsetDiviser","offX","offY","rx","ry","nodeElem","trgNode","getAttributeNS","xlinkHref","defSvgRectElement","getRotatedRectIntersect","getPathIntersect","getCircleIntersect","emptyEdge","srcOff","calculateOffset","trgOff","linePoints","lineFunction","textAnchor","alignmentBaseline","handleText","title","label_to","label_from","style","fontSize","stroke","classNames","selected","isSelected","edgeHandleTransformation","data-source","data-target","undefined","getXlinkHref","renderHandleText","renderLabelText","handleTooltipText","ref","ExpandIcon","xmlns","GraphControls","zoom","e","minZoom","maxZoom","sliderVal","zoomLevelNext","sliderToZoom","delta","zoomLevel","modifyZoom","zoomToSlider","max","step","onMouseDown","zoomToFit","Component","NodeText","typeText","emptyNode","maxTitleChars","getTypeText","opacity","Node","handleMouseMove","mouseButtonDown","sourceEvent","buttons","shiftKey","layoutEngine","pointerOffset","newState","centerNodeOnMove","setState","drawingEdge","off","getPositionForNode","onNodeMove","handleDragStart","nodeRef","current","oldSibling","nextSibling","appendChild","handleDragEnd","onNodeSelected","onNodeUpdate","mouseDown","insertBefore","handleMouseOver","hovered","onNodeMouseEnter","handleMouseOut","onNodeMouseLeave","dragFunction","on","renderNode","nodeShapeContainerClassName","nodeClassName","nodeSubtypeClassName","nodeTypeXlinkHref","getNodeTypeXlinkHref","nodeSubtypeXlinkHref","getNodeSubtypeXlinkHref","defSvgNodeElement","nodeWidthAttr","nodeHeightAttr","parseInt","subtype","renderNodeText","onMouseOver","onMouseOut","renderShape","renderText","GraphView","removeOldEdges","prevEdges","edgesMap","removeEdgeElement","handleDelete","canDeleteNode","canDeleteEdge","readOnly","deleteNode","deleteEdge","handleWrapperKeydown","onUndo","onCopySelected","onPasteSelected","focused","selectedNodeObj","metaKey","ctrlKey","handleEdgeSelected","dataset","svgClicked","getEdgeBySourceTarget","selectedEdgeObj","componentUpToDate","onSelectEdge","handleSvgClicked","onBackgroundClick","onSelectNode","onCreateNode","isPartOfEdge","selectingNode","classList","contains","xycoords","previousSelection","syncRenderNode","handleDocumentClick","ownerSVGElement","graphSvg","documentClicked","handleNodeMove","canCreateEdge","nodeMapNode","getNodeById","draggingEdge","syncRenderEdge","targetPosition","renderConnectedEdgesFromNode","asyncRenderNode","handleNodeUpdate","onUpdateNode","createNewEdge","nodeMap","hoveredNode","handleNodeMouseEnter","hoveredNodeData","edgeEndNode","handleNodeMouseLeave","toElement","relatedTarget","handleNodeSelected","creatingEdge","handleZoomStart","edgeId","isArrowClicked","draggedEdge","dragEdge","handleZoom","view","attr","viewTransform","renderGraphControls","handleZoomEnd","draggedEdgeCopy","removeElementFromDom","sourceNodeById","targetNodeById","canSwap","onSwapEdge","handleZoomToFit","entities","viewBBox","getBBox","handleZoomToFitImpl","zoomDur","viewWrapper","parent","clientWidth","clientHeight","next","k","setZoom","modK","modX","modY","dur","extent","scaleExtent","targetZoom","translate0","l","getNodeComponent","renderNodes","isEdgeSelected","getEdgeComponent","sourceNodeMapNode","targetNodeMapNode","renderEdge","nodeMoving","containerId","customContainerId","afterRenderEdge","edgeContainer","display","customContainer","remove","newSvgEdgeContainer","createElementNS","ReactDOM","render","asyncRenderEdge","timeoutId","cancelAnimationFrame","edgeTimeouts","requestAnimationFrame","renderEdges","nodeTimeouts","renderNodesTimeout","renderEdgesTimeout","graphControls","layoutEngineType","getNodesMap","getEdgesMap","linkNodesAndEdges","selectedNodeMap","selectedEdgeMap","adjustNodes","selectionChanged","initialBBox","zoomDelay","addEventListener","filter","zoomFilter","containZoom","select","selectedView","renderView","removeEventListener","nextState","prevProps","newNodes","forceReRender","removeOldNodes","addNewNodes","addNewEdges","nodesMapVar","oldNodesMap","selectedNode","prevSelectedNode","forceRender","yieldingLoop","prevNodes","prevNodesMap","prevNodeMapNode","oldEdgesMap","selectedEdge","prevSelectedEdge","prevEdge","swapEdge","newNodesArr","onDeleteNode","newEdgesArr","deleteEdgeBySourceTarget","onDeleteEdge","onCreateEdge","mapId1","mapId2","eventTarget","tagName","edgeCoords","parsePathToXY","getEdgePathElement","button","stopImmediatePropagation","mouse","mouseCoordinates","getMouseCoordinates","t","translate","scale","transition","duration","clearTimeout","nodeContainer","anyElement","idVar","showGraphControls","graphControlsWrapper","ownerDocument","el","entity","entityBBox","panToEntity","startNode","endNode","SPECIAL_TYPE","EmptyNodeShape","CustomEmptyShape","SpecialShape","PolyShape","ComplexCircleShape","data-intersect-ignore","SkinnyShape","SpecialChildShape","EdgeTypes","specialEdge","NodeSubtypes","specialChild","NodeTypes","empty","special","skinny","complexCircle","sample","expandData","makeItLarge","graph","generatedSample","totalNodes","numNodes","floor","random","generateSample","addStartNode","Date","now","expandMap","isNodeInArray","nodeID","nodeArray","console","log","side1SelectedNode","side2SelectedNode","then","startY1","startX1","startY2","startX2","expandBy","side","numRelated","nodesAdded","side1Nodes","otherSide","side2Nodes","deleteStartNode","splice","handleChange","viewNode","getNodeIndex","includes","viewEdge","nodeArr","newEdges","sourceViewNode","targetViewNode","getEdgeIndex","parse","warn","copiedNode","forceUpdate","handleChangeLayoutEngineType","onSelectPanNode","panToNode","newSample","artist1Node","artist2Node","startY","searchNode","findIndex","searchEdge","GraphConfig","name","App","path","component","exact","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f39e237.chunk.js","sourcesContent":["import React from 'react';\nvar querystring = require('querystring');\n\nfunction HomePage(){\n\n  async function login(){\n    var client_id = '2be7fd88da5d44ff818556c6d53a62a0'; // Your client id\n    var redirect_uri = 'http://localhost:8000/callback'; // Your redirect uri\n\n    const authAPI = `https://accounts.spotify.com/authorize?` + querystring.stringify({\n          client_id: client_id,\n          response_type: 'token',\n          redirect_uri: redirect_uri,\n        });\n\n    window.location = authAPI;\n    // Default options are marked with *\n  }\n\n\nreturn(\n  <div>\n  <h1> Please log into spotify below </h1>\n  <button onClick={() => login()}> Authenticate</button>\n  </div>\n);\n}\n\nexport default HomePage;\n","import React, {useState} from 'react';\n\nvar querystring = require('querystring');\n\nfunction Callback(){\n\n\n  const [artist1, setArtist1] = useState('');\n  const [artist2, setArtist2] = useState('');\n\n\n  //optimize\n  const urlString = String(window.location);\n  const queryParams = urlString.split(\"#\")[1];\n  const firstParam = queryParams.split(\"&\")[0];\n  const token = firstParam.split(\"=\")[1];\n  //end\n\n  function submit(){\n    localStorage.setItem('token', token);\n    localStorage.setItem('artist1', artist1);\n    localStorage.setItem('artist2', artist2);\n    window.location = '/graph'\n    //window.location = '/map'\n  }\n\n\n\n  return(\n    <div>\n    <label>\n      Artist1:\n      <input type = \"First artist\" value = {artist1} onChange={(event) => setArtist1(event.target.value)}/>\n    </label>\n    <label>\n      Artist2:\n      <input type = \"Second artist\" value = {artist2} onChange={(event) => setArtist2(event.target.value)}/>\n    </label>\n    <button onClick={() => submit()}>Submit artists</button>\n    </div>\n  );\n}\n\nexport default Callback;\n","import * as React from 'react';\n\n\nconst queryString = require('query-string');\n\n\n\nfunction Map(){\n  const token = localStorage.getItem('token');\n  const artist1 = localStorage.getItem('artist1');\n  const artist2 = localStorage.getItem('artist2');\n\n  const fetchData = async (artist1, artist2, token) => {\n    const result = await fetch('/fetchArtistMap', {\n      method: 'post',\n      body: JSON.stringify({\"artist1\": artist1, \"artist2\" : artist2, \"token\" : token, \"numRelated\" : 5}),\n      headers: {\n        'Content-Type' : 'application/json'\n      }\n    });\n    const body = await result.json();\n  };\n\n\nfetchData(artist1,artist2,token);\n\n\nreturn(\n  <div>\n  <h1> Map </h1>\n  <p>{token}</p>\n  <p>{artist1}</p>\n  <p>{artist2}</p>\n  </div>\n);\n}\n\nexport default Map;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n// import { type IGraphViewProps } from '../../components/graph-view';\nimport { type IGraphViewProps } from '../../components/graph-view-props';\nimport { type INode } from '../../components/node';\n\nexport type IPosition = {\n  x: number,\n  y: number,\n  [key: string]: any,\n};\n\nexport default class LayoutEngine {\n  graphViewProps: IGraphViewProps;\n  constructor(graphViewProps: IGraphViewProps) {\n    this.graphViewProps = graphViewProps;\n  }\n\n  calculatePosition(node: IPosition) {\n    return node;\n  }\n\n  adjustNodes(nodes: INode[], nodesMap?: any): INode[] {\n    let node = null;\n\n    for (let i = 0; i < nodes.length; i++) {\n      node = nodes[i];\n      const position = this.calculatePosition({\n        x: node.x || 0,\n        y: node.y || 0,\n      });\n\n      node.x = position.x;\n      node.y = position.y;\n    }\n\n    return nodes;\n  }\n\n  getPositionForNode(node: IPosition): IPosition {\n    return this.calculatePosition(node);\n  }\n}\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\nimport LayoutEngine, { type IPosition } from './layout-engine';\n\nclass None extends LayoutEngine {\n  calculatePosition(node: IPosition) {\n    return node;\n  }\n}\n\nexport default None;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport LayoutEngine, { type IPosition } from './layout-engine';\n\nclass SnapToGrid extends LayoutEngine {\n  calculatePosition(node: IPosition) {\n    const { x, y } = node;\n    let { gridSpacing } = this.graphViewProps;\n\n    gridSpacing = gridSpacing || 10;\n    const gridOffset = gridSpacing / 2;\n\n    let newX = x || 0;\n    let newY = y || 0;\n\n    if (x && (x - gridOffset) % gridSpacing !== 0) {\n      // Add (gridSpacing / 2) to account for the dot rendering.\n      // Now the center of the node is on a dot.\n      let multiplier = 1;\n\n      if ((x - gridOffset) % gridSpacing < gridOffset) {\n        multiplier = -1;\n      }\n\n      newX =\n        gridSpacing * Math.round(x / gridSpacing) + gridOffset * multiplier;\n    }\n\n    if (y && (y - gridOffset) % gridSpacing !== 0) {\n      // Add (gridSpacing / 2) to account for the dot rendering.\n      // Now the center of the node is on a dot.\n      let multiplier = 1;\n\n      if ((y - gridOffset) % gridSpacing < gridOffset) {\n        multiplier = -1;\n      }\n\n      newY =\n        gridSpacing * Math.round(y / gridSpacing) + gridOffset * multiplier;\n    }\n\n    return {\n      x: newX,\n      y: newY,\n    };\n  }\n}\n\nexport default SnapToGrid;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport None from './none';\nimport SnapToGrid from './snap-to-grid';\nimport VerticalTree from './vertical-tree';\nimport HorizontalTree from './horizontal-tree';\n\nexport type LayoutEngine = None | SnapToGrid | VerticalTree | HorizontalTree;\n\nexport const LayoutEngines = {\n  None,\n  SnapToGrid,\n  VerticalTree,\n  HorizontalTree,\n};\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as dagre from 'dagre';\nimport { type INode } from '../../components/node';\nimport SnapToGrid from './snap-to-grid';\n\nclass VerticalTree extends SnapToGrid {\n  adjustNodes(nodes: INode[], nodesMap?: any): INode[] {\n    const {\n      nodeKey,\n      nodeSize,\n      nodeHeight,\n      nodeWidth,\n      nodeSpacingMultiplier,\n    } = this.graphViewProps;\n    const g = new dagre.graphlib.Graph();\n\n    g.setGraph({});\n    g.setDefaultEdgeLabel(() => ({}));\n\n    const spacing = nodeSpacingMultiplier || 1.5;\n    const size = (nodeSize || 1) * spacing;\n    let height;\n    let width;\n\n    if (nodeHeight) {\n      height = nodeHeight * spacing;\n    }\n\n    if (nodeWidth) {\n      width = nodeWidth * spacing;\n    }\n\n    nodes.forEach(node => {\n      if (!nodesMap) {\n        return;\n      }\n\n      const nodeId = node[nodeKey];\n      const nodeKeyId = `key-${nodeId}`;\n      const nodesMapNode = nodesMap[nodeKeyId];\n\n      // prevent disconnected nodes from being part of the graph\n      if (\n        nodesMapNode.incomingEdges.length === 0 &&\n        nodesMapNode.outgoingEdges.length === 0\n      ) {\n        return;\n      }\n\n      g.setNode(nodeKeyId, { width: width || size, height: height || size });\n      nodesMapNode.outgoingEdges.forEach(edge => {\n        g.setEdge(nodeKeyId, `key-${edge.target}`);\n      });\n    });\n\n    dagre.layout(g);\n\n    g.nodes().forEach(gNodeId => {\n      const nodesMapNode = nodesMap[gNodeId];\n\n      // gNode is the dagre representation\n      const gNode = g.node(gNodeId);\n\n      nodesMapNode.node.x = gNode.x;\n      nodesMapNode.node.y = gNode.y;\n    });\n\n    return nodes;\n  }\n}\n\nexport default VerticalTree;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as dagre from 'dagre';\nimport { type INode } from '../../components/node';\nimport SnapToGrid from './snap-to-grid';\n\nclass HorizontalTree extends SnapToGrid {\n  adjustNodes(nodes: INode[], nodesMap?: any): INode[] {\n    const {\n      nodeKey,\n      nodeSize,\n      nodeHeight,\n      nodeWidth,\n      nodeSizeOverridesAllowed,\n      nodeSpacingMultiplier,\n      nodeLocationOverrides,\n      graphConfig,\n    } = this.graphViewProps;\n    const spacing = nodeSpacingMultiplier || 1.5;\n    const size = (nodeSize || 1) * spacing;\n    const g = new dagre.graphlib.Graph();\n    const height = nodeHeight ? nodeHeight * spacing : size;\n    const width = nodeWidth ? nodeWidth * spacing : size;\n\n    g.setGraph(\n      Object.assign(\n        {\n          rankdir: 'LR',\n        },\n        graphConfig\n      )\n    );\n    g.setDefaultEdgeLabel(() => ({}));\n\n    nodes.forEach(node => {\n      if (!nodesMap) {\n        return;\n      }\n\n      const {\n        sizeOverrides: { width: widthOverride, height: heightOverride } = {},\n      } = node;\n\n      const nodeId = node[nodeKey];\n      const nodeKeyId = `key-${nodeId}`;\n      const nodesMapNode = nodesMap[nodeKeyId];\n\n      // prevent disconnected nodes from being part of the graph\n      if (\n        nodesMapNode.incomingEdges.length === 0 &&\n        nodesMapNode.outgoingEdges.length === 0\n      ) {\n        return;\n      }\n\n      g.setNode(nodeKeyId, {\n        width:\n          nodeSizeOverridesAllowed && widthOverride ? widthOverride : width,\n        height:\n          nodeSizeOverridesAllowed && heightOverride ? heightOverride : height,\n      });\n      nodesMapNode.outgoingEdges.forEach(edge => {\n        g.setEdge(nodeKeyId, `key-${edge.target}`);\n      });\n    });\n\n    dagre.layout(g);\n\n    if (nodeLocationOverrides) {\n      for (const gNodeId in nodeLocationOverrides) {\n        if (nodeLocationOverrides.hasOwnProperty(gNodeId)) {\n          const nodeKeyId = `key-${gNodeId}`;\n          const gNode = g.node(nodeKeyId);\n          const locationOverride = nodeLocationOverrides[gNodeId];\n\n          if (gNode && locationOverride) {\n            gNode.x = locationOverride.x;\n            gNode.y = locationOverride.y;\n          }\n        }\n      }\n    }\n\n    g.nodes().forEach(gNodeId => {\n      const nodesMapNode = nodesMap[gNodeId];\n\n      // gNode is the dagre representation\n      const gNode = g.node(gNodeId);\n\n      nodesMapNode.node.x = gNode.x;\n      nodesMapNode.node.y = gNode.y;\n    });\n\n    return nodes;\n  }\n}\n\nexport default HorizontalTree;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\n\ntype IBackgroundProps = {\n  gridSize?: number,\n  backgroundFillId?: string,\n  renderBackground?: (gridSize?: number) => any,\n};\n\nclass Background extends React.Component<IBackgroundProps> {\n  static defaultProps = {\n    backgroundFillId: '#grid',\n    gridSize: 40960,\n  };\n\n  render() {\n    const { gridSize, backgroundFillId, renderBackground } = this.props;\n\n    if (renderBackground != null) {\n      return renderBackground(gridSize);\n    }\n\n    return (\n      <rect\n        className=\"background\"\n        x={-(gridSize || 0) / 4}\n        y={-(gridSize || 0) / 4}\n        width={gridSize}\n        height={gridSize}\n        fill={`url(${backgroundFillId || ''})`}\n      />\n    );\n  }\n}\n\nexport default Background;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\n\ntype IArrowheadMarkerProps = {\n  edgeArrowSize?: number,\n};\n\nclass ArrowheadMarker extends React.Component<IArrowheadMarkerProps> {\n  static defaultProps = {\n    edgeArrowSize: 8,\n  };\n\n  render() {\n    const { edgeArrowSize } = this.props;\n\n    if (!edgeArrowSize && edgeArrowSize !== 0) {\n      return null;\n    }\n\n    return (\n      <marker\n        id=\"end-arrow\"\n        key=\"end-arrow\"\n        viewBox={`0 -${edgeArrowSize / 2} ${edgeArrowSize} ${edgeArrowSize}`}\n        refX={`${edgeArrowSize / 2}`}\n        markerWidth={`${edgeArrowSize}`}\n        markerHeight={`${edgeArrowSize}`}\n        orient=\"auto\"\n      >\n        <path\n          className=\"arrow\"\n          d={`M0,-${edgeArrowSize / 2}L${edgeArrowSize},0L0,${edgeArrowSize /\n            2}`}\n        />\n      </marker>\n    );\n  }\n}\n\nexport default ArrowheadMarker;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\n\ntype ICircleProps = {\n  gridSpacing?: number,\n  gridDotSize?: number,\n};\n\nclass Circle extends React.Component<ICircleProps> {\n  static defaultProps = {\n    gridDotSize: 2,\n    gridSpacing: 36,\n  };\n\n  render() {\n    const { gridSpacing, gridDotSize } = this.props;\n\n    return (\n      <circle\n        className=\"circle\"\n        cx={(gridSpacing || 0) / 2}\n        cy={(gridSpacing || 0) / 2}\n        r={gridDotSize}\n      />\n    );\n  }\n}\n\nexport default Circle;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\nimport Circle from './circle';\n\ntype IBackgroundPatternProps = {\n  gridSpacing?: number,\n  gridDotSize?: number,\n};\n\nclass BackgroundPattern extends React.Component<IBackgroundPatternProps> {\n  render() {\n    const { gridSpacing, gridDotSize } = this.props;\n\n    return (\n      <pattern\n        id=\"grid\"\n        key=\"grid\"\n        width={gridSpacing}\n        height={gridSpacing}\n        patternUnits=\"userSpaceOnUse\"\n      >\n        <Circle gridSpacing={gridSpacing} gridDotSize={gridDotSize} />\n      </pattern>\n    );\n  }\n}\n\nexport default BackgroundPattern;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\n\nclass DropshadowFilter extends React.Component<any> {\n  render() {\n    return (\n      <filter id=\"dropshadow\" key=\"dropshadow\" height=\"130%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\" />\n        <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\" />\n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.1\" />\n        </feComponentTransfer>\n        <feMerge>\n          <feMergeNode />\n          <feMergeNode in=\"SourceGraphic\" />\n        </feMerge>\n      </filter>\n    );\n  }\n}\n\nexport default DropshadowFilter;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\nimport ArrowheadMarker from './arrowhead-marker';\nimport BackgroundPattern from './background-pattern';\nimport DropshadowFilter from './dropshadow-filter';\n\ntype IDefsProps = {\n  gridSpacing?: number,\n  gridDotSize?: number,\n  edgeArrowSize?: number,\n  nodeTypes: any, // TODO: define nodeTypes, nodeSubtypes, and edgeTypes. Must have shape and shapeId!\n  nodeSubtypes: any,\n  edgeTypes: any,\n  renderDefs?: () => any | null,\n};\n\ntype IDefsState = {\n  graphConfigDefs: any,\n};\n\nclass Defs extends React.Component<IDefsProps, IDefsState> {\n  static defaultProps = {\n    gridDotSize: 2,\n    renderDefs: () => null,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: any) {\n    const graphConfigDefs = [];\n\n    Defs.processGraphConfigDefs(nextProps.nodeTypes, graphConfigDefs);\n    Defs.processGraphConfigDefs(nextProps.nodeSubtypes, graphConfigDefs);\n    Defs.processGraphConfigDefs(nextProps.edgeTypes, graphConfigDefs);\n\n    return {\n      graphConfigDefs,\n    };\n  }\n\n  static processGraphConfigDefs(typesObj: any, graphConfigDefs: any) {\n    Object.keys(typesObj).forEach(type => {\n      const safeId = typesObj[type].shapeId\n        ? typesObj[type].shapeId.replace('#', '')\n        : 'graphdef';\n\n      graphConfigDefs.push(\n        React.cloneElement(typesObj[type].shape, {\n          key: `${safeId}-${graphConfigDefs.length + 1}`,\n        })\n      );\n    });\n  }\n\n  constructor(props: IDefsProps) {\n    super(props);\n    this.state = {\n      graphConfigDefs: [],\n    };\n  }\n\n  render() {\n    const { edgeArrowSize, gridSpacing, gridDotSize } = this.props;\n\n    return (\n      <defs>\n        {this.state.graphConfigDefs}\n\n        <ArrowheadMarker edgeArrowSize={edgeArrowSize} />\n\n        <BackgroundPattern\n          gridSpacing={gridSpacing}\n          gridDotSize={gridDotSize}\n        />\n\n        <DropshadowFilter />\n\n        {this.props.renderDefs && this.props.renderDefs()}\n      </defs>\n    );\n  }\n}\n\nexport default Defs;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport { type IEdge } from '../components/edge';\nimport { type INode } from '../components/node';\nimport fastDeepEqual from 'fast-deep-equal';\n\nexport type INodeMapNode = {\n  node: INode,\n  originalArrIndex: number,\n  incomingEdges: IEdge[],\n  outgoingEdges: IEdge[],\n  parents: INode[],\n  children: INode[],\n};\n\nclass GraphUtils {\n  static getNodesMap(nodes: any, key: string) {\n    const map = {};\n    const arr = Object.keys(nodes).map(key => nodes[key]);\n    let item = null;\n\n    for (let i = 0; i < arr.length; i++) {\n      item = arr[i];\n      map[`key-${item[key]}`] = {\n        children: [],\n        incomingEdges: [],\n        node: item,\n        originalArrIndex: i,\n        outgoingEdges: [],\n        parents: [],\n      };\n    }\n\n    return map;\n  }\n\n  static getEdgesMap(arr: IEdge[]) {\n    const map = {};\n    let item = null;\n\n    for (let i = 0; i < arr.length; i++) {\n      item = arr[i];\n\n      if (item.target == null) {\n        continue;\n      }\n\n      map[`${item.source != null ? item.source : ''}_${item.target}`] = {\n        edge: item,\n        originalArrIndex: i,\n      };\n    }\n\n    return map;\n  }\n\n  static linkNodesAndEdges(nodesMap: any, edges: IEdge[]) {\n    let nodeMapSourceNode = null;\n    let nodeMapTargetNode = null;\n    let edge = null;\n\n    for (let i = 0; i < edges.length; i++) {\n      edge = edges[i];\n\n      if (edge.target == null) {\n        continue;\n      }\n\n      nodeMapSourceNode =\n        nodesMap[`key-${edge.source != null ? edge.source : ''}`];\n      nodeMapTargetNode = nodesMap[`key-${edge.target}`];\n\n      // avoid an orphaned edge\n      if (nodeMapSourceNode && nodeMapTargetNode) {\n        nodeMapSourceNode.outgoingEdges.push(edge);\n        nodeMapTargetNode.incomingEdges.push(edge);\n        nodeMapSourceNode.children.push(nodeMapTargetNode);\n        nodeMapTargetNode.parents.push(nodeMapSourceNode);\n      }\n    }\n  }\n\n  static removeElementFromDom(id: string) {\n    const container = document.getElementById(id);\n\n    if (container && container.parentNode) {\n      container.parentNode.removeChild(container);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  static findParent(element: any, selector: string) {\n    if (element && element.matches && element.matches(selector)) {\n      return element;\n    } else if (element && element.parentNode) {\n      return GraphUtils.findParent(element.parentNode, selector);\n    }\n\n    return null;\n  }\n\n  static classNames(...args: any[]) {\n    let className = '';\n\n    for (const arg of args) {\n      if (typeof arg === 'string' || typeof arg === 'number') {\n        className += ` ${arg}`;\n      } else if (\n        typeof arg === 'object' &&\n        !Array.isArray(arg) &&\n        arg !== null\n      ) {\n        Object.keys(arg).forEach(key => {\n          if (arg[key]) {\n            className += ` ${key}`;\n          }\n        });\n      } else if (Array.isArray(arg)) {\n        className += ` ${arg.join(' ')}`;\n      }\n    }\n\n    return className.trim();\n  }\n\n  static yieldingLoop(count, chunksize, callback, finished) {\n    let i = 0;\n\n    (function chunk() {\n      const end = Math.min(i + chunksize, count);\n\n      for (; i < end; ++i) {\n        callback.call(null, i);\n      }\n\n      if (i < count) {\n        setTimeout(chunk, 0);\n      } else {\n        finished && finished.call(null);\n      }\n    })();\n  }\n\n  // retained for backwards compatibility\n  static hasNodeShallowChanged(prevNode: INode, newNode: INode) {\n    return !this.isEqual(prevNode, newNode);\n  }\n\n  static isEqual(prevNode: any, newNode: any) {\n    return fastDeepEqual(prevNode, newNode);\n  }\n}\n\nexport default GraphUtils;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as d3 from 'd3';\nimport * as React from 'react';\nimport { intersect, shape } from 'svg-intersections';\nimport { Point2D, Matrix2D } from 'kld-affine';\nimport { Intersection } from 'kld-intersections';\nimport GraphUtils from '../utilities/graph-util';\nimport { type INode } from './node';\n\nexport type IEdge = {\n  source: string,\n  target: string,\n  type?: string,\n  handleText?: string,\n  handleTooltipText?: string,\n  label_from?: string,\n  label_to?: string,\n  [key: string]: any,\n};\n\nexport type ITargetPosition = {\n  x: number,\n  y: number,\n};\n\ntype IEdgeProps = {\n  data: IEdge,\n  edgeTypes: any, // TODO: create an edgeTypes interface\n  edgeHandleSize?: number,\n  nodeSize?: number,\n  sourceNode: INode | null,\n  targetNode: INode | ITargetPosition,\n  isSelected: boolean,\n  nodeKey: string,\n  viewWrapperElem: HTMLDivElement,\n  rotateEdgeHandle: true,\n};\n\nclass Edge extends React.Component<IEdgeProps> {\n  static defaultProps = {\n    edgeHandleSize: 50,\n    isSelected: false,\n    rotateEdgeHandle: true,\n  };\n\n  static getTheta(pt1: any, pt2: any) {\n    const xComp = (pt2.x || 0) - (pt1.x || 0);\n    const yComp = (pt2.y || 0) - (pt1.y || 0);\n    const theta = Math.atan2(yComp, xComp);\n\n    return theta;\n  }\n\n  static lineFunction(srcTrgDataArray: any) {\n    // Provides API for curved lines using .curve() Example:\n    // https://bl.ocks.org/d3indepth/64be9fc39a92ef074034e9a8fb29dcce\n    return d3\n      .line()\n      .x((d: any) => {\n        return d.x;\n      })\n      .y((d: any) => {\n        return d.y;\n      })(srcTrgDataArray);\n  }\n\n  static getArrowSize(\n    viewWrapperElem: HTMLDivElement | HTMLDocument = document\n  ) {\n    const defEndArrowElement: any = viewWrapperElem.querySelector(\n      `defs>marker>.arrow`\n    );\n\n    return defEndArrowElement.getBoundingClientRect();\n  }\n\n  static getEdgePathElement(\n    edge: IEdge,\n    viewWrapperElem: HTMLDivElement | HTMLDocument = document\n  ) {\n    return viewWrapperElem.querySelector(\n      `#edge-${edge.source}-${edge.target}-container>.edge-container>.edge>.edge-path`\n    );\n  }\n\n  static parsePathToXY(edgePathElement: Element | null) {\n    const response = {\n      source: { x: 0, y: 0 },\n      target: { x: 0, y: 0 },\n    };\n\n    if (edgePathElement) {\n      let d = edgePathElement.getAttribute('d');\n\n      d = d && d.replace(/^M/, '');\n      d = d && d.replace(/L/, ',');\n      let dArr = (d && d.split(',')) || [];\n\n      dArr = dArr.map(dimension => {\n        return parseFloat(dimension);\n      });\n\n      if (dArr.length === 4) {\n        response.source.x = dArr[0];\n        response.source.y = dArr[1];\n        response.target.x = dArr[2];\n        response.target.y = dArr[3];\n      }\n    }\n\n    return response;\n  }\n\n  static getDefaultIntersectResponse() {\n    return {\n      xOff: 0,\n      yOff: 0,\n      intersect: {\n        type: 'none',\n        point: {\n          x: 0,\n          y: 0,\n        },\n      },\n    };\n  }\n\n  static getRotatedRectIntersect(\n    defSvgRotatedRectElement: any,\n    src: any,\n    trg: any,\n    includesArrow: boolean,\n    viewWrapperElem: HTMLDivElement | HTMLDocument = document\n  ) {\n    const response = Edge.getDefaultIntersectResponse();\n    const arrowSize = Edge.getArrowSize(viewWrapperElem);\n    const clientRect = defSvgRotatedRectElement.getBoundingClientRect();\n\n    const widthAttr = defSvgRotatedRectElement.getAttribute('width');\n    const heightAttr = defSvgRotatedRectElement.getAttribute('height');\n    const w = widthAttr ? parseFloat(widthAttr) : clientRect.width;\n    const h = heightAttr ? parseFloat(heightAttr) : clientRect.height;\n    const trgX = trg.x || 0;\n    const trgY = trg.y || 0;\n    const srcX = src.x || 0;\n    const srcY = src.y || 0;\n\n    const top = trgY - h / 2;\n    const bottom = trgY + h / 2;\n    const left = trgX - w / 2;\n    const right = trgX + w / 2;\n\n    const line = shape('line', { x1: srcX, y1: srcY, x2: trgX, y2: trgY });\n\n    // define rectangle\n    const rect = {\n      topLeft: new Point2D(left, top),\n      bottomRight: new Point2D(right, bottom),\n    };\n\n    // convert rectangle corners to polygon (list of points)\n    const poly = [\n      rect.topLeft,\n      new Point2D(rect.bottomRight.x, rect.topLeft.y),\n      rect.bottomRight,\n      new Point2D(rect.topLeft.x, rect.bottomRight.y),\n    ];\n\n    // find center point of rectangle\n    const center = rect.topLeft.lerp(rect.bottomRight, 0.5);\n\n    // get the rotation\n    const transform = defSvgRotatedRectElement.getAttribute('transform');\n    let rotate = transform\n      ? transform.replace(/(rotate.[0-9]*.)|[^]/g, '$1')\n      : null;\n    let angle = 0;\n\n    if (rotate) {\n      // get the number\n      rotate = rotate.replace(/^rotate\\(|\\)$/g, '');\n      // define rotation in radians\n      angle = (parseFloat(rotate) * Math.PI) / 180.0;\n    }\n\n    // create matrix for rotating around center of rectangle\n    const rotation = Matrix2D.rotationAt(angle, center);\n    // create new rotated polygon\n    const rotatedPoly = poly.map(p => p.transform(rotation));\n\n    // find intersections\n    const pathIntersect = Intersection.intersectLinePolygon(\n      line.params[0],\n      line.params[1],\n      rotatedPoly\n    );\n\n    if (pathIntersect.points.length > 0) {\n      let arrowWidth = 0; //arrowSize.width;\n      let arrowHeight = 0; //arrowSize.height;\n      const xIntersect = pathIntersect.points[0].x;\n      const yIntersect = pathIntersect.points[0].y;\n\n      if (xIntersect > left && xIntersect < right && yIntersect > trgY) {\n        // arrow points to the bottom of the node\n        arrowHeight = arrowSize.height;\n      } else if (xIntersect > left && xIntersect < right && yIntersect < trgY) {\n        // arrow points to the top of the node\n        arrowHeight = -arrowSize.height;\n      } else if (yIntersect > top && yIntersect < bottom && xIntersect < trgX) {\n        // arrow points to the left of the node\n        arrowWidth = -arrowSize.width;\n      } else {\n        // arrow points to the right of the node\n        arrowWidth = arrowSize.width;\n      }\n\n      response.xOff =\n        trgX - xIntersect - (includesArrow ? arrowWidth / 1.25 : 0);\n      response.yOff =\n        trgY - yIntersect - (includesArrow ? arrowHeight / 1.25 : 0);\n      response.intersect = pathIntersect.points[0];\n    }\n\n    return response;\n  }\n\n  static getPathIntersect(\n    defSvgPathElement: any,\n    src: any,\n    trg: any,\n    includesArrow?: boolean = true,\n    viewWrapperElem: HTMLDivElement | HTMLDocument = document\n  ) {\n    const response = Edge.getDefaultIntersectResponse();\n    const arrowSize = Edge.getArrowSize(viewWrapperElem);\n    // get the rectangular area around path\n    const clientRect = defSvgPathElement.getBoundingClientRect();\n\n    const w = clientRect.width;\n    const h = clientRect.height;\n    const trgX = trg.x || 0;\n    const trgY = trg.y || 0;\n    const srcX = src.x || 0;\n    const srcY = src.y || 0;\n\n    // calculate the positions of each corner relative to the trg position\n    const top = trgY - h / 2;\n    const bottom = trgY + h / 2;\n    const left = trgX - w / 2;\n    const right = trgX + w / 2;\n\n    // modify the d property to add top and left to the x and y positions\n    let d = defSvgPathElement.getAttribute('d');\n\n    if (!/^M/.test(d)) {\n      // doesn't look like what we expect.\n      // TODO: add more use cases than simple moveTo commands\n      return;\n    }\n\n    d = d.replace(/^M /, '');\n    let dArr = d.split(/[ ,]+/);\n\n    dArr = dArr.map((val, index) => {\n      let isEnd = false;\n\n      if (/Z$/.test(val)) {\n        val = val.replace(/Z$/, '');\n        isEnd = true;\n      }\n\n      // index % 2 are x positions\n      if (index % 2 === 0) {\n        return parseFloat(val) + left + (isEnd ? 'Z' : '');\n      }\n\n      return parseFloat(val) + top + (isEnd ? 'Z' : '');\n    });\n\n    const pathIntersect = intersect(\n      shape('path', { d: 'M ' + dArr.join(' ') }),\n      shape('line', { x1: srcX, y1: srcY, x2: trgX, y2: trgY })\n    );\n\n    if (pathIntersect.points.length > 0) {\n      let arrowWidth = 0; //arrowSize.width;\n      let arrowHeight = 0; //arrowSize.height;\n      const xIntersect = pathIntersect.points[0].x;\n      const yIntersect = pathIntersect.points[0].y;\n      let multiplier = 1;\n\n      if (xIntersect > left && xIntersect < right) {\n        const yIntersectDiff = yIntersect - trgY;\n\n        multiplier = yIntersect < trgY ? -1 : 1;\n\n        arrowHeight = arrowSize.height * multiplier;\n        // Math.min is used to find a percentage of the arrow size\n        // as the arrow approaches a horizontal or vertical vector\n        // Math.abs is used to force the diff to be positive,\n        // because we're using a multiplier instead and Math.min would choose a large\n        // negative number as the minimum, which is undesirable.\n        arrowHeight = arrowHeight * Math.min(Math.abs(yIntersectDiff), 1);\n      }\n\n      if (yIntersect > top && yIntersect < bottom) {\n        const xIntersectDiff = xIntersect - trgX;\n\n        multiplier = xIntersect < trgX ? -1 : 1;\n\n        arrowWidth = arrowSize.width * multiplier;\n        arrowWidth = arrowWidth * Math.min(Math.abs(xIntersectDiff), 1);\n      }\n\n      response.xOff =\n        trgX - xIntersect - (includesArrow ? arrowWidth / 1.25 : 0);\n      response.yOff =\n        trgY - yIntersect - (includesArrow ? arrowHeight / 1.25 : 0);\n\n      response.intersect = pathIntersect.points[0];\n    }\n\n    return response;\n  }\n\n  static getCircleIntersect(\n    defSvgCircleElement: any,\n    src: any,\n    trg: any,\n    includesArrow?: boolean = true,\n    viewWrapperElem: HTMLDivElement | HTMLDocument = document\n  ) {\n    const response = Edge.getDefaultIntersectResponse();\n    const arrowSize = Edge.getArrowSize(viewWrapperElem);\n    const arrowWidth = arrowSize.width;\n    const arrowHeight = arrowSize.height;\n    const clientRect = defSvgCircleElement.getBoundingClientRect();\n    const parentElement = defSvgCircleElement.parentElement;\n    let parentWidth = parentElement.getAttribute('width');\n    let parentHeight = parentElement.getAttribute('width');\n\n    if (parentWidth) {\n      parentWidth = parseFloat(parentWidth);\n    }\n\n    if (parentHeight) {\n      parentHeight = parseFloat(parentHeight);\n    }\n\n    const w = parentWidth ? parentWidth : clientRect.width;\n    const h = parentHeight ? parentHeight : clientRect.height;\n    const trgX = trg.x || 0;\n    const trgY = trg.y || 0;\n    const srcX = src.x || 0;\n    const srcY = src.y || 0;\n    // from the center of the node to the perimeter\n    const arrowOffsetDiviser = 1.25;\n    const offX = w / 2 + (includesArrow ? arrowWidth / arrowOffsetDiviser : 0);\n    const offY = h / 2 + (includesArrow ? arrowHeight / arrowOffsetDiviser : 0);\n\n    // Note: even though this is a circle function, we can use ellipse\n    // because all circles are ellipses but not all ellipses are circles.\n    const pathIntersect = intersect(\n      shape('ellipse', {\n        rx: offX,\n        ry: offY,\n        cx: trgX,\n        cy: trgY,\n      }),\n      shape('line', { x1: srcX, y1: srcY, x2: trgX, y2: trgY })\n    );\n\n    if (pathIntersect.points.length > 0) {\n      const xIntersect = pathIntersect.points[0].x;\n      const yIntersect = pathIntersect.points[0].y;\n\n      response.xOff = trgX - xIntersect;\n      response.yOff = trgY - yIntersect;\n      response.intersect = pathIntersect.points[0];\n    }\n\n    return response;\n  }\n\n  static calculateOffset(\n    nodeSize: any,\n    src: any,\n    trg: any,\n    nodeKey: string,\n    includesArrow?: boolean = true,\n    viewWrapperElem?: HTMLDivElement = document\n  ) {\n    let response = Edge.getDefaultIntersectResponse();\n\n    if (trg[nodeKey] == null) {\n      return response;\n    }\n\n    // Note: document.getElementById is by far the fastest way to get a node.\n    // compare 2.82ms for querySelector('#node-a2 use.node') vs\n    // 0.31ms and 99us for document.getElementById()\n    const nodeElem = document.getElementById(`node-${trg[nodeKey]}`);\n\n    if (!nodeElem) {\n      return response;\n    }\n\n    const trgNode = nodeElem.querySelector(`use.node`);\n\n    // the test for trgNode.getAttributeNS makes sure we really have a node and not some other type of object\n    if (!trgNode || (trgNode && !trgNode.getAttributeNS)) {\n      return response;\n    }\n\n    const xlinkHref = trgNode.getAttributeNS(\n      'http://www.w3.org/1999/xlink',\n      'href'\n    );\n\n    if (!xlinkHref) {\n      return response;\n    }\n\n    const defSvgRectElement: SVGRectElement | null = viewWrapperElem.querySelector(\n      `defs>${xlinkHref} rect:not([data-intersect-ignore=true])`\n    );\n    // Conditionally trying to select the element in other ways is faster than trying to\n    // do the selection.\n    const defSvgPathElement: SVGPathElement | null = !defSvgRectElement\n      ? viewWrapperElem.querySelector(\n          `defs>${xlinkHref} path:not([data-intersect-ignore=true])`\n        )\n      : null;\n    const defSvgCircleElement:\n      | SVGCircleElement\n      | SVGEllipseElement\n      | SVGPolygonElement\n      | null =\n      !defSvgPathElement && !defSvgPathElement\n        ? viewWrapperElem.querySelector(\n            `defs>${xlinkHref} circle:not([data-intersect-ignore=true]), defs>${xlinkHref} ellipse:not([data-intersect-ignore=true]), defs>${xlinkHref} polygon:not([data-intersect-ignore=true])`\n          )\n        : null;\n\n    if (defSvgRectElement) {\n      // it's a rectangle\n      response = {\n        ...response,\n        ...Edge.getRotatedRectIntersect(\n          defSvgRectElement,\n          src,\n          trg,\n          includesArrow,\n          viewWrapperElem\n        ),\n      };\n    } else if (defSvgPathElement) {\n      // it's a complex path\n      response = {\n        ...response,\n        ...Edge.getPathIntersect(\n          defSvgPathElement,\n          src,\n          trg,\n          includesArrow,\n          viewWrapperElem\n        ),\n      };\n    } else {\n      // it's a circle or some other type\n      response = {\n        ...response,\n        ...Edge.getCircleIntersect(\n          defSvgCircleElement,\n          src,\n          trg,\n          includesArrow,\n          viewWrapperElem\n        ),\n      };\n    }\n\n    return response;\n  }\n\n  static getXlinkHref(edgeTypes: any, data: any) {\n    if (data.type && edgeTypes[data.type]) {\n      return edgeTypes[data.type].shapeId;\n    } else if (edgeTypes.emptyEdge) {\n      return edgeTypes.emptyEdge.shapeId;\n    }\n\n    return null;\n  }\n\n  edgeOverlayRef: React.ElementRef<typeof Edge>;\n\n  constructor(props: IEdgeProps) {\n    super(props);\n    this.edgeOverlayRef = React.createRef();\n  }\n\n  getEdgeHandleTranslation = () => {\n    const { data } = this.props;\n\n    let pathDescription = this.getPathDescription(data);\n\n    pathDescription = pathDescription.replace(/^M/, '');\n    pathDescription = pathDescription.replace(/L/, ',');\n    const pathDescriptionArr = pathDescription.split(',');\n\n    // [0] = src x, [1] = src y\n    // [2] = trg x, [3] = trg y\n    const diffX =\n      parseFloat(pathDescriptionArr[2]) - parseFloat(pathDescriptionArr[0]);\n    const diffY =\n      parseFloat(pathDescriptionArr[3]) - parseFloat(pathDescriptionArr[1]);\n    const x = parseFloat(pathDescriptionArr[0]) + diffX / 2;\n    const y = parseFloat(pathDescriptionArr[1]) + diffY / 2;\n\n    return `translate(${x}, ${y})`;\n  };\n\n  getEdgeHandleOffsetTranslation = () => {\n    const offset = -(this.props.edgeHandleSize || 0) / 2;\n\n    return `translate(${offset}, ${offset})`;\n  };\n\n  getEdgeHandleRotation = (negate: any = false) => {\n    let rotated = false;\n    const src = this.props.sourceNode;\n    const trg = this.props.targetNode;\n    let theta = (Edge.getTheta(src, trg) * 180) / Math.PI;\n\n    if (negate) {\n      theta = -theta;\n    }\n\n    if (theta > 90 || theta < -90) {\n      theta = theta + 180;\n      rotated = true;\n    }\n\n    return [`rotate(${theta})`, rotated];\n  };\n\n  getEdgeHandleTransformation = () => {\n    const translation = this.getEdgeHandleTranslation();\n    const rotation = this.props.rotateEdgeHandle\n      ? this.getEdgeHandleRotation()[0]\n      : '';\n    const offset = this.getEdgeHandleOffsetTranslation();\n\n    return `${translation} ${rotation} ${offset}`;\n  };\n\n  getPathDescription(edge: any) {\n    const {\n      sourceNode,\n      targetNode,\n      nodeKey,\n      nodeSize,\n      viewWrapperElem,\n    } = this.props;\n    const trgX = targetNode && targetNode.x ? targetNode.x : 0;\n    const trgY = targetNode && targetNode.y ? targetNode.y : 0;\n    const srcX = targetNode && sourceNode.x ? sourceNode.x : 0;\n    const srcY = targetNode && sourceNode.y ? sourceNode.y : 0;\n\n    // To calculate the offset for a specific node we use that node as the third parameter\n    // and the accompanying node as the second parameter, representing where the line\n    // comes from and where it's going to. Don't think of a line as a one-way arrow, but rather\n    // a connection between two points. In this case, to obtain the offsets for the src we\n    // write trg first, then src second. Vice versa to get the offsets for trg.\n    const srcOff = Edge.calculateOffset(\n      nodeSize || 0,\n      targetNode,\n      sourceNode,\n      nodeKey,\n      false,\n      viewWrapperElem\n    );\n    const trgOff = Edge.calculateOffset(\n      nodeSize || 0,\n      sourceNode,\n      targetNode,\n      nodeKey,\n      true,\n      viewWrapperElem\n    );\n\n    const linePoints = [\n      {\n        x: srcX - srcOff.xOff,\n        y: srcY - srcOff.yOff,\n      },\n      {\n        x: trgX - trgOff.xOff,\n        y: trgY - trgOff.yOff,\n      },\n    ];\n\n    return Edge.lineFunction(linePoints);\n  }\n\n  renderHandleText(data: any) {\n    return (\n      <text\n        className=\"edge-text\"\n        textAnchor=\"middle\"\n        alignmentBaseline=\"central\"\n        transform={`${this.getEdgeHandleTranslation()}`}\n      >\n        {data.handleText}\n      </text>\n    );\n  }\n\n  renderLabelText(data: any) {\n    const [rotation, isRotated] = this.getEdgeHandleRotation();\n    const title = isRotated\n      ? `${data.label_to} ↔ ${data.label_from}`\n      : `${data.label_from} ↔ ${data.label_to}`;\n\n    return (\n      <text\n        className=\"edge-text\"\n        textAnchor=\"middle\"\n        alignmentBaseline=\"central\"\n        style={{ fontSize: '11px', stroke: 'none', fill: 'black' }}\n        transform={`${this.getEdgeHandleTranslation()} ${rotation} translate(0,-5)`}\n      >\n        {title}\n      </text>\n    );\n  }\n\n  render() {\n    const { data, edgeTypes, edgeHandleSize, viewWrapperElem } = this.props;\n\n    if (!viewWrapperElem) {\n      return null;\n    }\n\n    const id = `${data.source != null ? data.source : ''}_${data.target}`;\n    const className = GraphUtils.classNames('edge', {\n      selected: this.props.isSelected,\n    });\n    const edgeHandleTransformation = this.getEdgeHandleTransformation();\n\n    return (\n      <g\n        className=\"edge-container\"\n        data-source={data.source}\n        data-target={data.target}\n      >\n        <g className={className}>\n          <path\n            className=\"edge-path\"\n            d={this.getPathDescription(data) || undefined}\n          />\n          <use\n            xlinkHref={Edge.getXlinkHref(edgeTypes, data)}\n            width={edgeHandleSize}\n            height={edgeHandleSize}\n            transform={edgeHandleTransformation}\n            style={{ transform: edgeHandleTransformation }}\n          />\n          {data.handleText && this.renderHandleText(data)}\n          {data.label_from && data.label_to && this.renderLabelText(data)}\n        </g>\n        <g className=\"edge-mouse-handler\">\n          <title>{data.handleTooltipText}</title>\n          <path\n            className=\"edge-overlay-path\"\n            ref={this.edgeOverlayRef}\n            id={id}\n            data-source={data.source}\n            data-target={data.target}\n            d={this.getPathDescription(data) || undefined}\n          />\n        </g>\n      </g>\n    );\n  }\n}\n\nexport default Edge;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n/*\n  Zoom slider and zoom to fit controls for GraphView\n*/\n\nimport React from 'react';\nimport Parse from 'html-react-parser';\nimport faExpand from '@fortawesome/fontawesome-free/svgs/solid/expand.svg';\n\n\nfunction ExpandIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n      <path d=\"M212.686 315.314L120 408l32.922 31.029c15.12 15.12 4.412 40.971-16.97 40.971h-112C10.697 480 0 469.255 0 456V344c0-21.382 25.803-32.09 40.922-16.971L72 360l92.686-92.686c6.248-6.248 16.379-6.248 22.627 0l25.373 25.373c6.249 6.248 6.249 16.378 0 22.627zm22.628-118.628L328 104l-32.922-31.029C279.958 57.851 290.666 32 312.048 32h112C437.303 32 448 42.745 448 56v112c0 21.382-25.803 32.09-40.922 16.971L376 152l-92.686 92.686c-6.248 6.248-16.379 6.248-22.627 0l-25.373-25.373c-6.249-6.248-6.249-16.378 0-22.627z\"></path>\n    </svg>\n  );\n}\n\nconst steps = 100; // Slider steps\n// const parsedIcon = Parse(\"/expand.svg\"); //  parse SVG once\n// const parsedIcon = () => parsedIcon; // convert SVG to react component\n\ntype IGraphControlProps = {\n  maxZoom?: number,\n  minZoom?: number,\n  zoomLevel: number,\n  zoomToFit: (event: SyntheticMouseEvent<HTMLButtonElement>) => void,\n  modifyZoom: (delta: number) => boolean,\n};\n\nclass GraphControls extends React.Component<IGraphControlProps> {\n  static defaultProps = {\n    maxZoom: 1.5,\n    minZoom: 0.15,\n  };\n\n  // Convert slider val (0-steps) to original zoom value range\n  sliderToZoom(val: number) {\n    const { minZoom, maxZoom } = this.props;\n\n    return (val * ((maxZoom || 0) - (minZoom || 0))) / steps + (minZoom || 0);\n  }\n\n  // Convert zoom val (minZoom-maxZoom) to slider range\n  zoomToSlider(val: number) {\n    const { minZoom, maxZoom } = this.props;\n\n    return ((val - (minZoom || 0)) * steps) / ((maxZoom || 0) - (minZoom || 0));\n  }\n\n  // Modify current zoom of graph-view\n  zoom = (e: any) => {\n    const { minZoom, maxZoom } = this.props;\n    const sliderVal = e.target.value;\n    const zoomLevelNext = this.sliderToZoom(sliderVal);\n    const delta = zoomLevelNext - this.props.zoomLevel;\n\n    if (zoomLevelNext <= (maxZoom || 0) && zoomLevelNext >= (minZoom || 0)) {\n      this.props.modifyZoom(delta);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"graph-controls\">\n        <div className=\"slider-wrapper\">\n          <span>-</span>\n          <input\n            type=\"range\"\n            className=\"slider\"\n            min={this.zoomToSlider(this.props.minZoom || 0)}\n            max={this.zoomToSlider(this.props.maxZoom || 0)}\n            value={this.zoomToSlider(this.props.zoomLevel)}\n            onChange={this.zoom}\n            step=\"1\"\n          />\n          <span>+</span>\n        </div>\n        <button\n          type=\"button\"\n          className=\"slider-button\"\n          onMouseDown={this.props.zoomToFit}>\n          <ExpandIcon />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default GraphControls;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as React from 'react';\nimport GraphUtils from '../utilities/graph-util';\nimport { type INode } from './node';\n\ntype INodeTextProps = {\n  data: INode,\n  nodeTypes: any, // TODO: create a nodeTypes interface\n  isSelected: boolean,\n  maxTitleChars: number,\n};\n\nclass NodeText extends React.Component<INodeTextProps> {\n  getTypeText(data: INode, nodeTypes: any) {\n    if (data.type && nodeTypes[data.type]) {\n      return nodeTypes[data.type].typeText;\n    } else if (nodeTypes.emptyNode) {\n      return nodeTypes.emptyNode.typeText;\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { data, nodeTypes, isSelected, maxTitleChars } = this.props;\n    const lineOffset = 18;\n    const title = data.title;\n    const className = GraphUtils.classNames('node-text', {\n      selected: isSelected,\n    });\n    const typeText = this.getTypeText(data, nodeTypes);\n\n    return (\n      <text className={className} textAnchor=\"middle\" alignmentBaseline=\"baseline\">\n        {!!title && <tspan opacity=\"1\">{title}</tspan>}\n        {title && <title>{title}</title>}\n      </text>\n    );\n  }\n}\n\nexport default NodeText;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as d3 from 'd3';\nimport * as React from 'react';\n// This works in Typescript but causes an import loop for Flowtype. We'll just use `any` below.\n// import { type LayoutEngine } from '../utilities/layout-engine/layout-engine-config';\nimport Edge from './edge';\nimport GraphUtils from '../utilities/graph-util';\nimport NodeText from './node-text';\n\nexport type IPoint = {\n  x: number,\n  y: number,\n};\n\nexport type INode = {\n  title: string,\n  x?: number | null,\n  y?: number | null,\n  type?: string | null,\n  subtype?: string | null,\n  [key: string]: any,\n};\n\ntype INodeProps = {\n  data: INode,\n  id: string,\n  nodeTypes: any, // TODO: make a nodeTypes interface\n  nodeSubtypes: any, // TODO: make a nodeSubtypes interface\n  opacity?: number,\n  nodeKey: string,\n  nodeSize?: number,\n  onNodeMouseEnter: (event: any, data: any, hovered: boolean) => void,\n  onNodeMouseLeave: (event: any, data: any) => void,\n  onNodeMove: (point: IPoint, id: string, shiftKey: boolean) => void,\n  onNodeSelected: (\n    data: any,\n    id: string,\n    shiftKey: boolean,\n    event?: any\n  ) => void,\n  onNodeUpdate: (point: IPoint, id: string, shiftKey: boolean) => void,\n  renderNode?: (\n    nodeRef: any,\n    data: any,\n    id: string,\n    selected: boolean,\n    hovered: boolean\n  ) => any,\n  renderNodeText?: (data: any, id: string | number, isSelected: boolean) => any,\n  isSelected: boolean,\n  layoutEngine?: any,\n  viewWrapperElem: HTMLDivElement,\n  centerNodeOnMove: boolean,\n  maxTitleChars: number,\n};\n\ntype INodeState = {\n  hovered: boolean,\n  x: number,\n  y: number,\n  selected: boolean,\n  mouseDown: boolean,\n  drawingEdge: boolean,\n  pointerOffset: ?{ x: number, y: number },\n};\n\nclass Node extends React.Component<INodeProps, INodeState> {\n  static defaultProps = {\n    isSelected: false,\n    nodeSize: 154,\n    maxTitleChars: 12,\n    onNodeMouseEnter: () => {\n      return;\n    },\n    onNodeMouseLeave: () => {\n      return;\n    },\n    onNodeMove: () => {\n      return;\n    },\n    onNodeSelected: () => {\n      return;\n    },\n    onNodeUpdate: () => {\n      return;\n    },\n    centerNodeOnMove: true,\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: INodeProps,\n    prevState: INodeState\n  ) {\n    return {\n      selected: nextProps.isSelected,\n      x: nextProps.data.x,\n      y: nextProps.data.y,\n    };\n  }\n\n  nodeRef: any;\n  oldSibling: any;\n\n  constructor(props: INodeProps) {\n    super(props);\n\n    this.state = {\n      drawingEdge: false,\n      hovered: false,\n      mouseDown: false,\n      selected: false,\n      x: props.data.x || 0,\n      y: props.data.y || 0,\n      pointerOffset: null,\n    };\n\n    this.nodeRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const dragFunction = d3\n      .drag()\n      .on('drag', () => {\n        this.handleMouseMove(d3.event);\n      })\n      .on('start', this.handleDragStart)\n      .on('end', () => {\n        this.handleDragEnd(d3.event);\n      });\n\n    d3.select(this.nodeRef.current)\n      .on('mouseout', this.handleMouseOut)\n      .call(dragFunction);\n  }\n\n  handleMouseMove = (event: any) => {\n    const mouseButtonDown = event.sourceEvent.buttons === 1;\n    const shiftKey = event.sourceEvent.shiftKey;\n    const {\n      nodeSize,\n      layoutEngine,\n      nodeKey,\n      viewWrapperElem,\n      data,\n    } = this.props;\n    const { pointerOffset } = this.state;\n\n    if (!mouseButtonDown) {\n      return;\n    }\n\n    // While the mouse is down, this function handles all mouse movement\n    const newState = {\n      x: event.x,\n      y: event.y,\n      pointerOffset,\n    };\n\n    if (!this.props.centerNodeOnMove) {\n      newState.pointerOffset = pointerOffset || {\n        x: event.x - (data.x || 0),\n        y: event.y - (data.y || 0),\n      };\n      newState.x -= newState.pointerOffset.x;\n      newState.y -= newState.pointerOffset.y;\n    }\n\n    if (shiftKey) {\n      this.setState({ drawingEdge: true });\n      // draw edge\n      // undo the target offset subtraction done by Edge\n      const off = Edge.calculateOffset(\n        nodeSize,\n        this.props.data,\n        newState,\n        nodeKey,\n        true,\n        viewWrapperElem\n      );\n\n      newState.x += off.xOff;\n      newState.y += off.yOff;\n      // now tell the graph that we're actually drawing an edge\n    } else if (!this.state.drawingEdge && layoutEngine) {\n      // move node using the layout engine\n      Object.assign(newState, layoutEngine.getPositionForNode(newState));\n    }\n\n    this.setState(newState);\n    this.props.onNodeMove(newState, this.props.data[nodeKey], shiftKey);\n  };\n\n  handleDragStart = () => {\n    if (!this.nodeRef.current) {\n      return;\n    }\n\n    if (!this.oldSibling) {\n      this.oldSibling = this.nodeRef.current.parentElement.nextSibling;\n    }\n\n    // Moves child to the end of the element stack to re-arrange the z-index\n    this.nodeRef.current.parentElement.parentElement.appendChild(\n      this.nodeRef.current.parentElement\n    );\n  };\n\n  handleDragEnd = (event: any) => {\n    if (!this.nodeRef.current) {\n      return;\n    }\n\n    const { x, y, drawingEdge } = this.state;\n    const { data, nodeKey, onNodeSelected, onNodeUpdate } = this.props;\n    const { sourceEvent } = event;\n\n    this.setState({\n      mouseDown: false,\n      drawingEdge: false,\n      pointerOffset: null,\n    });\n\n    if (this.oldSibling && this.oldSibling.parentElement) {\n      this.oldSibling.parentElement.insertBefore(\n        this.nodeRef.current.parentElement,\n        this.oldSibling\n      );\n    }\n\n    const shiftKey = sourceEvent.shiftKey;\n\n    onNodeUpdate({ x, y }, data[nodeKey], shiftKey || drawingEdge);\n\n    onNodeSelected(data, data[nodeKey], shiftKey || drawingEdge, sourceEvent);\n  };\n\n  handleMouseOver = (event: any) => {\n    // Detect if mouse is already down and do nothing.\n    let hovered = false;\n\n    if (event && event.buttons !== 1) {\n      hovered = true;\n      this.setState({ hovered });\n    }\n\n    this.props.onNodeMouseEnter(event, this.props.data, hovered);\n  };\n\n  handleMouseOut = (event: any) => {\n    // Detect if mouse is already down and do nothing. Sometimes the system lags on\n    // drag and we don't want the mouseOut to fire while the user is moving the\n    // node around\n\n    this.setState({ hovered: false });\n    this.props.onNodeMouseLeave(event, this.props.data);\n  };\n\n  static getNodeTypeXlinkHref(data: INode, nodeTypes: any) {\n    if (data.type && nodeTypes[data.type]) {\n      return nodeTypes[data.type].shapeId;\n    } else if (nodeTypes.emptyNode) {\n      return nodeTypes.emptyNode.shapeId;\n    }\n\n    return null;\n  }\n\n  static getNodeSubtypeXlinkHref(data: INode, nodeSubtypes?: any) {\n    if (data.subtype && nodeSubtypes && nodeSubtypes[data.subtype]) {\n      return nodeSubtypes[data.subtype].shapeId;\n    } else if (nodeSubtypes && nodeSubtypes.emptyNode) {\n      return nodeSubtypes.emptyNode.shapeId;\n    }\n\n    return null;\n  }\n\n  renderShape() {\n    const { renderNode, data, nodeTypes, nodeSubtypes, nodeKey } = this.props;\n    const { hovered, selected } = this.state;\n    const props = {\n      height: this.props.nodeSize || 0,\n      width: this.props.nodeSize || 0,\n    };\n    const nodeShapeContainerClassName = GraphUtils.classNames('shape');\n    const nodeClassName = GraphUtils.classNames('node', { selected, hovered });\n    const nodeSubtypeClassName = GraphUtils.classNames('subtype-shape', {\n      selected: this.state.selected,\n    });\n    const nodeTypeXlinkHref = Node.getNodeTypeXlinkHref(data, nodeTypes) || '';\n    const nodeSubtypeXlinkHref =\n      Node.getNodeSubtypeXlinkHref(data, nodeSubtypes) || '';\n\n    // get width and height defined on def element\n    const defSvgNodeElement: any = nodeTypeXlinkHref\n      ? document.querySelector(`defs>${nodeTypeXlinkHref}`)\n      : null;\n    const nodeWidthAttr = defSvgNodeElement\n      ? defSvgNodeElement.getAttribute('width')\n      : 0;\n    const nodeHeightAttr = defSvgNodeElement\n      ? defSvgNodeElement.getAttribute('height')\n      : 0;\n\n    props.width = nodeWidthAttr ? parseInt(nodeWidthAttr, 10) : props.width;\n    props.height = nodeHeightAttr ? parseInt(nodeHeightAttr, 10) : props.height;\n\n    if (renderNode) {\n      // Originally: graphView, domNode, datum, index, elements.\n      return renderNode(this.nodeRef, data, data[nodeKey], selected, hovered);\n    } else {\n      return (\n        <g className={nodeShapeContainerClassName} {...props}>\n          {!!data.subtype && (\n            <use\n              className={nodeSubtypeClassName}\n              x={-props.width / 2}\n              y={-props.height / 2}\n              width={props.width}\n              height={props.height}\n              xlinkHref={nodeSubtypeXlinkHref}\n            />\n          )}\n          <use\n            className={nodeClassName}\n            x={-props.width / 2}\n            y={-props.height / 2}\n            width={props.width}\n            height={props.height}\n            xlinkHref={nodeTypeXlinkHref}\n          />\n        </g>\n      );\n    }\n  }\n\n  renderText() {\n    const {\n      data,\n      id,\n      nodeTypes,\n      renderNodeText,\n      isSelected,\n      maxTitleChars,\n    } = this.props;\n\n    if (renderNodeText) {\n      return renderNodeText(data, id, isSelected);\n    }\n\n    return (\n      <NodeText\n        data={data}\n        nodeTypes={nodeTypes}\n        isSelected={this.state.selected}\n        maxTitleChars={maxTitleChars}\n      />\n    );\n  }\n\n  render() {\n    const { x, y, hovered, selected } = this.state;\n    const { opacity, id, data } = this.props;\n    const className = GraphUtils.classNames('node', data.type, {\n      hovered,\n      selected,\n    });\n\n    return (\n      <g\n        className={className}\n        onMouseOver={this.handleMouseOver}\n        onMouseOut={this.handleMouseOut}\n        id={id}\n        ref={this.nodeRef}\n        opacity={opacity}\n        transform={`translate(${x}, ${y})`}\n        style={{ transform: `matrix(1, 0, 0, 1, ${x}, ${y})` }}\n      >\n        {this.renderShape()}\n        {this.renderText()}\n      </g>\n    );\n  }\n}\n\nexport default Node;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\nimport * as d3 from 'd3';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/main.scss';\nimport { LayoutEngines } from '../utilities/layout-engine/layout-engine-config';\nimport { type IGraphViewProps } from './graph-view-props';\nimport Background from './background';\nimport Defs from './defs';\nimport Edge, { type IEdge } from './edge';\nimport GraphControls from './graph-controls';\nimport GraphUtils, { type INodeMapNode } from '../utilities/graph-util';\nimport Node, { type INode, type IPoint } from './node';\n\ntype IViewTransform = {\n  k: number,\n  x: number,\n  y: number,\n};\n\ntype IBBox = {\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n};\n\ntype IGraphViewState = {\n  viewTransform?: IViewTransform,\n  hoveredNode: boolean,\n  nodesMap: any,\n  edgesMap: any,\n  nodes: any[],\n  edges: any[],\n  selectingNode: boolean,\n  hoveredNodeData: INode | null,\n  edgeEndNode: INode | null,\n  draggingEdge: boolean,\n  draggedEdge: any,\n  componentUpToDate: boolean,\n  selectedEdgeObj: any,\n  selectedNodeObj: any,\n  documentClicked: boolean,\n  svgClicked: boolean,\n  focused: boolean,\n};\n\nclass GraphView extends React.Component<IGraphViewProps, IGraphViewState> {\n  static defaultProps = {\n    canCreateEdge: (startNode?: INode, endNode?: INode) => true,\n    canDeleteEdge: () => true,\n    canDeleteNode: () => true,\n    edgeArrowSize: 8,\n    gridSpacing: 36,\n    layoutEngineType: 'None',\n    maxZoom: 1.5,\n    minZoom: 0.15,\n    nodeSize: 154,\n    readOnly: false,\n    showGraphControls: true,\n    zoomDelay: 1000,\n    zoomDur: 750,\n    rotateEdgeHandle: true,\n    centerNodeOnMove: true,\n  };\n\n  static getDerivedStateFromProps(\n    nextProps: IGraphViewProps,\n    prevState: IGraphViewState\n  ) {\n    const { edges, nodeKey } = nextProps;\n    let nodes = nextProps.nodes;\n    const nodesMap = GraphUtils.getNodesMap(nodes, nodeKey);\n    const edgesMap = GraphUtils.getEdgesMap(edges);\n\n    GraphUtils.linkNodesAndEdges(nodesMap, edges);\n\n    const selectedNodeMap =\n      nextProps.selected && nodesMap[`key-${nextProps.selected[nodeKey]}`]\n        ? nodesMap[`key-${nextProps.selected[nodeKey]}`]\n        : null;\n    const selectedEdgeMap =\n      nextProps.selected &&\n      edgesMap[`${nextProps.selected.source}_${nextProps.selected.target}`]\n        ? edgesMap[`${nextProps.selected.source}_${nextProps.selected.target}`]\n        : null;\n\n    // Handle layoutEngine on initial render\n    if (\n      prevState.nodes.length === 0 &&\n      nextProps.layoutEngineType &&\n      LayoutEngines[nextProps.layoutEngineType]\n    ) {\n      const layoutEngine = new LayoutEngines[nextProps.layoutEngineType](\n        nextProps\n      );\n      const newNodes = layoutEngine.adjustNodes(nodes, nodesMap);\n\n      nodes = newNodes;\n    }\n\n    const nextState = {\n      componentUpToDate: true,\n      edges,\n      edgesMap,\n      nodes,\n      nodesMap,\n      readOnly: nextProps.readOnly,\n      selectedEdgeObj: {\n        edge: selectedEdgeMap ? selectedEdgeMap.edge : null,\n      },\n      selectedNodeObj: {\n        nodeId: selectedNodeMap ? nextProps.selected[nodeKey] : null,\n        node: selectedNodeMap ? selectedNodeMap.node : null,\n      },\n      selectionChanged: false,\n    };\n\n    return nextState;\n  }\n\n  nodeTimeouts: any;\n  edgeTimeouts: any;\n  renderNodesTimeout: any;\n  renderEdgesTimeout: any;\n  zoom: any;\n  viewWrapper: React.RefObject<HTMLDivElement>;\n  graphSvg: React.RefObject<SVGElement>;\n  entities: any;\n  selectedView: any;\n  view: any;\n  graphControls: any;\n  layoutEngine: any;\n\n  constructor(props: IGraphViewProps) {\n    super(props);\n\n    this.nodeTimeouts = {};\n    this.edgeTimeouts = {};\n    this.renderNodesTimeout = null;\n    this.renderEdgesTimeout = null;\n    this.viewWrapper = React.createRef();\n    this.graphControls = React.createRef();\n    this.graphSvg = React.createRef();\n\n    if (props.layoutEngineType) {\n      this.layoutEngine = new LayoutEngines[props.layoutEngineType](props);\n    }\n\n    this.state = {\n      componentUpToDate: false,\n      draggedEdge: null,\n      draggingEdge: false,\n      edgeEndNode: null,\n      edges: [],\n      edgesMap: {},\n      hoveredNode: false,\n      hoveredNodeData: null,\n      nodes: [],\n      nodesMap: {},\n      selectedEdgeObj: null,\n      selectedNodeObj: null,\n      selectingNode: false,\n      documentClicked: false,\n      svgClicked: false,\n      focused: true,\n    };\n  }\n\n  componentDidMount() {\n    const { initialBBox, zoomDelay, minZoom, maxZoom } = this.props;\n\n    // TODO: can we target the element rather than the document?\n    document.addEventListener('keydown', this.handleWrapperKeydown);\n    document.addEventListener('click', this.handleDocumentClick);\n\n    this.zoom = d3\n      .zoom()\n      .filter(this.zoomFilter)\n      .scaleExtent([minZoom || 0, maxZoom || 0])\n      .on('start', () => {\n        this.handleZoomStart(d3.event);\n      })\n      .on('zoom', () => {\n        this.handleZoom(d3.event);\n      })\n      .on('end', this.handleZoomEnd);\n\n    d3.select(this.viewWrapper.current)\n      .on('touchstart', this.containZoom)\n      .on('touchmove', this.containZoom)\n      .on('click', this.handleSvgClicked) // handle element click in the element components\n      .select('svg')\n      .call(this.zoom);\n\n    this.selectedView = d3.select(this.view);\n\n    if (initialBBox) {\n      // If initialBBox is set, we don't compute the zoom and don't do any transition.\n      this.handleZoomToFitImpl(initialBBox, 0);\n      this.renderView();\n\n      return;\n    }\n\n    // On the initial load, the 'view' <g> doesn't exist until componentDidMount.\n    // Manually render the first view.\n    this.renderView();\n    setTimeout(() => {\n      if (this.viewWrapper.current != null) {\n        this.handleZoomToFit();\n      }\n    }, zoomDelay);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleWrapperKeydown);\n    document.removeEventListener('click', this.handleDocumentClick);\n  }\n\n  shouldComponentUpdate(\n    nextProps: IGraphViewProps,\n    nextState: IGraphViewState\n  ) {\n    if (\n      nextProps.nodes !== this.props.nodes ||\n      nextProps.edges !== this.props.edges ||\n      !nextState.componentUpToDate ||\n      nextProps.selected !== this.props.selected ||\n      nextProps.readOnly !== this.props.readOnly ||\n      nextProps.layoutEngineType !== this.props.layoutEngineType\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate(prevProps: IGraphViewProps, prevState: IGraphViewState) {\n    const {\n      nodesMap,\n      edgesMap,\n      nodes,\n      selectedNodeObj,\n      selectedEdgeObj,\n    } = this.state;\n    const { layoutEngineType } = this.props;\n\n    if (layoutEngineType && LayoutEngines[layoutEngineType]) {\n      this.layoutEngine = new LayoutEngines[layoutEngineType](this.props);\n      const newNodes = this.layoutEngine.adjustNodes(nodes, nodesMap);\n\n      this.setState({\n        nodes: newNodes,\n      });\n    }\n\n    const forceReRender = prevProps.layoutEngineType !== layoutEngineType;\n\n    // Note: the order is intentional\n    // remove old edges\n    this.removeOldEdges(prevState.edges, edgesMap);\n\n    // remove old nodes\n    this.removeOldNodes(prevState.nodes, prevState.nodesMap, nodesMap);\n\n    // add new nodes\n    this.addNewNodes(\n      this.state.nodes,\n      prevState.nodesMap,\n      selectedNodeObj,\n      prevState.selectedNodeObj,\n      forceReRender\n    );\n\n    // add new edges\n    this.addNewEdges(\n      this.state.edges,\n      prevState.edgesMap,\n      selectedEdgeObj,\n      prevState.selectedEdgeObj,\n      forceReRender\n    );\n\n    this.setState({\n      componentUpToDate: true,\n    });\n  }\n\n  getNodeById(id: string | null, nodesMap: any | null): INodeMapNode | null {\n    const nodesMapVar = nodesMap || this.state.nodesMap;\n\n    return nodesMapVar ? nodesMapVar[`key-${id != null ? id : ''}`] : null;\n  }\n\n  getEdgeBySourceTarget(source: string, target: string): IEdge | null {\n    return this.state.edgesMap\n      ? this.state.edgesMap[`${source}_${target}`]\n      : null;\n  }\n\n  deleteEdgeBySourceTarget(source: string, target: string) {\n    if (this.state.edgesMap && this.state.edgesMap[`${source}_${target}`]) {\n      delete this.state.edgesMap[`${source}_${target}`];\n    }\n  }\n\n  addNewNodes(\n    nodes: INode[],\n    oldNodesMap: any,\n    selectedNode: any,\n    prevSelectedNode: any,\n    forceRender: boolean = false\n  ) {\n    if (this.state.draggingEdge) {\n      return;\n    }\n\n    const nodeKey = this.props.nodeKey;\n    let node = null;\n    let prevNode = null;\n\n    GraphUtils.yieldingLoop(nodes.length, 50, i => {\n      node = nodes[i];\n      prevNode = this.getNodeById(node[nodeKey], oldNodesMap);\n\n      // if there was a previous node and it changed\n      if (\n        prevNode != null &&\n        (!GraphUtils.isEqual(prevNode.node, node) ||\n          (selectedNode.node !== prevSelectedNode.node &&\n            ((selectedNode.node &&\n              node[nodeKey] === selectedNode.node[nodeKey]) ||\n              (prevSelectedNode.node &&\n                node[nodeKey] === prevSelectedNode.node[nodeKey]))))\n      ) {\n        // Updated node\n        this.asyncRenderNode(node);\n      } else if (forceRender || !prevNode) {\n        // New node\n        this.asyncRenderNode(node);\n      }\n    });\n  }\n\n  removeOldNodes(prevNodes: any, prevNodesMap: any, nodesMap: any) {\n    const nodeKey = this.props.nodeKey;\n\n    // remove old nodes\n    for (let i = 0; i < prevNodes.length; i++) {\n      const prevNode = prevNodes[i];\n      const nodeId = prevNode[nodeKey];\n\n      // Check for deletions\n      if (this.getNodeById(nodeId, nodesMap)) {\n        continue;\n      }\n\n      const prevNodeMapNode = this.getNodeById(nodeId, prevNodesMap);\n\n      // remove all outgoing edges\n      prevNodeMapNode.outgoingEdges.forEach(edge => {\n        this.removeEdgeElement(edge.source, edge.target);\n      });\n\n      // remove all incoming edges\n      prevNodeMapNode.incomingEdges.forEach(edge => {\n        this.removeEdgeElement(edge.source, edge.target);\n      });\n\n      // remove node\n      // The timeout avoids a race condition\n      setTimeout(() => {\n        GraphUtils.removeElementFromDom(`node-${nodeId}-container`);\n      });\n    }\n  }\n\n  addNewEdges(\n    edges: IEdge[],\n    oldEdgesMap: any,\n    selectedEdge: any,\n    prevSelectedEdge: any,\n    forceRender: boolean = false\n  ) {\n    if (!this.state.draggingEdge) {\n      let edge = null;\n\n      GraphUtils.yieldingLoop(edges.length, 50, i => {\n        edge = edges[i];\n\n        if (edge.source == null || !edge.target == null) {\n          return;\n        }\n\n        const prevEdge = oldEdgesMap[`${edge.source}_${edge.target}`];\n\n        if (\n          forceRender ||\n          !prevEdge || // selection change\n          !GraphUtils.isEqual(prevEdge.edge, edge) ||\n          (selectedEdge.edge && edge === selectedEdge.edge) ||\n          (prevSelectedEdge.edge && prevSelectedEdge.edge)\n        ) {\n          // new edge\n          this.asyncRenderEdge(edge);\n        }\n      });\n    }\n  }\n\n  removeOldEdges = (prevEdges: IEdge[], edgesMap: any) => {\n    // remove old edges\n    let edge = null;\n\n    for (let i = 0; i < prevEdges.length; i++) {\n      edge = prevEdges[i];\n\n      // Check for deletions\n      if (\n        edge.source == null ||\n        edge.target == null ||\n        !edgesMap[`${edge.source}_${edge.target}`]\n      ) {\n        // remove edge\n        this.removeEdgeElement(edge.source, edge.target);\n        continue;\n      }\n    }\n  };\n\n  removeEdgeElement(source: string, target: string) {\n    const id = `${source}-${target}`;\n\n    GraphUtils.removeElementFromDom(`edge-${id}-container`);\n  }\n\n  canSwap(sourceNode: INode, hoveredNode: INode | null, swapEdge: any) {\n    return (\n      hoveredNode &&\n      sourceNode !== hoveredNode &&\n      (swapEdge.source !== sourceNode[this.props.nodeKey] ||\n        swapEdge.target !== hoveredNode[this.props.nodeKey])\n    );\n  }\n\n  deleteNode(selectedNode: INode) {\n    const { nodeKey } = this.props;\n    const { nodes } = this.state;\n    const nodeId = selectedNode[nodeKey];\n\n    // delete from local state\n    const newNodesArr = nodes.filter(node => node[nodeKey] !== nodeId);\n\n    this.setState({\n      componentUpToDate: false,\n      hoveredNode: false,\n    });\n\n    // remove from UI\n    GraphUtils.removeElementFromDom(`node-${nodeId}-container`);\n\n    // inform consumer\n    this.props.onSelectNode(null);\n    this.props.onDeleteNode(selectedNode, nodeId, newNodesArr);\n  }\n\n  deleteEdge(selectedEdge: IEdge) {\n    const { edges } = this.state;\n\n    if (selectedEdge.source == null || selectedEdge.target == null) {\n      return;\n    }\n\n    const newEdgesArr = edges.filter(edge => {\n      return !(\n        edge.source === selectedEdge.source &&\n        edge.target === selectedEdge.target\n      );\n    });\n\n    if (selectedEdge.source != null && selectedEdge.target != null) {\n      this.deleteEdgeBySourceTarget(selectedEdge.source, selectedEdge.target);\n    }\n\n    this.setState({\n      componentUpToDate: false,\n      edges: newEdgesArr,\n    });\n\n    // remove from UI\n    if (selectedEdge.source != null && selectedEdge.target != null) {\n      // remove extra custom containers just in case.\n      GraphUtils.removeElementFromDom(\n        `edge-${selectedEdge.source}-${selectedEdge.target}-custom-container`\n      );\n      GraphUtils.removeElementFromDom(\n        `edge-${selectedEdge.source}-${selectedEdge.target}-container`\n      );\n    }\n\n    // inform consumer\n    this.props.onDeleteEdge(selectedEdge, newEdgesArr);\n  }\n\n  handleDelete = (selected: IEdge | INode) => {\n    const { canDeleteNode, canDeleteEdge, readOnly } = this.props;\n\n    if (readOnly || !selected) {\n      return;\n    }\n\n    if (selected.source == null && canDeleteNode && canDeleteNode(selected)) {\n      // node\n      this.deleteNode(selected);\n    } else if (\n      selected.source != null &&\n      canDeleteEdge &&\n      canDeleteEdge(selected)\n    ) {\n      // edge\n      this.deleteEdge(selected);\n    }\n  };\n\n  handleWrapperKeydown: KeyboardEventListener = d => {\n    const { selected, onUndo, onCopySelected, onPasteSelected } = this.props;\n    const { focused, selectedNodeObj } = this.state;\n\n    // Conditionally ignore keypress events on the window\n    if (!focused) {\n      return;\n    }\n\n    switch (d.key) {\n      case 'Delete':\n      case 'Backspace':\n        if (selectedNodeObj) {\n          this.handleDelete(selectedNodeObj.node || selected);\n        }\n\n        break;\n      case 'z':\n        if ((d.metaKey || d.ctrlKey) && onUndo) {\n          onUndo();\n        }\n\n        break;\n      case 'c':\n        if (\n          (d.metaKey || d.ctrlKey) &&\n          selectedNodeObj.node &&\n          onCopySelected\n        ) {\n          onCopySelected();\n        }\n\n        break;\n      case 'v':\n        if (\n          (d.metaKey || d.ctrlKey) &&\n          selectedNodeObj.node &&\n          onPasteSelected\n        ) {\n          onPasteSelected();\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  handleEdgeSelected = e => {\n    const { source, target } = e.target.dataset;\n    let newState = {\n      svgClicked: true,\n      focused: true,\n    };\n\n    if (source != null && target != null) {\n      const edge: IEdge | null = this.getEdgeBySourceTarget(source, target);\n\n      if (edge == null) {\n        return;\n      }\n\n      const originalArrIndex = (this.getEdgeBySourceTarget(source, target): any)\n        .originalArrIndex;\n\n      newState = {\n        ...newState,\n        selectedEdgeObj: {\n          componentUpToDate: false,\n          edge: this.state.edges[originalArrIndex],\n        },\n      };\n      this.setState(newState);\n      this.props.onSelectEdge(this.state.edges[originalArrIndex]);\n    } else {\n      this.setState(newState);\n    }\n  };\n\n  handleSvgClicked = (d: any, i: any) => {\n    const {\n      onBackgroundClick,\n      onSelectNode,\n      readOnly,\n      onCreateNode,\n    } = this.props;\n\n    if (this.isPartOfEdge(d3.event.target)) {\n      this.handleEdgeSelected(d3.event);\n\n      return; // If any part of the edge is clicked, return\n    }\n\n    if (this.state.selectingNode) {\n      this.setState({\n        focused: true,\n        selectingNode: false,\n        svgClicked: true,\n      });\n    } else {\n      if (\n        !d3.event.shiftKey &&\n        onBackgroundClick &&\n        d3.event.target.classList.contains('background')\n      ) {\n        const xycoords = d3.mouse(d3.event.target);\n\n        onBackgroundClick(xycoords[0], xycoords[1], d3.event);\n      }\n\n      const previousSelection =\n        (this.state.selectedNodeObj && this.state.selectedNodeObj.node) || null;\n\n      // de-select the current selection\n      this.setState({\n        selectedNodeObj: null,\n        focused: true,\n        svgClicked: true,\n      });\n      onSelectNode(null);\n\n      if (previousSelection) {\n        this.syncRenderNode(previousSelection);\n      }\n\n      if (!readOnly && d3.event.shiftKey) {\n        const xycoords = d3.mouse(d3.event.target);\n\n        onCreateNode(xycoords[0], xycoords[1], d3.event);\n      }\n    }\n  };\n\n  handleDocumentClick = (event: any) => {\n    // Ignore document click if it's in the SVGElement\n    if (\n      event &&\n      event.target &&\n      event.target.ownerSVGElement != null &&\n      event.target.ownerSVGElement === this.graphSvg.current\n    ) {\n      return;\n    }\n\n    this.setState({\n      documentClicked: true,\n      focused: false,\n      svgClicked: false,\n    });\n  };\n\n  isPartOfEdge(element: any) {\n    return !!GraphUtils.findParent(element, '.edge-container');\n  }\n\n  handleNodeMove = (position: IPoint, nodeId: string, shiftKey: boolean) => {\n    const { canCreateEdge, readOnly } = this.props;\n    const nodeMapNode: INodeMapNode | null = this.getNodeById(nodeId);\n\n    if (!nodeMapNode) {\n      return;\n    }\n\n    const node = nodeMapNode.node;\n\n    if (readOnly) {\n      return;\n    }\n\n    if (!shiftKey && !this.state.draggingEdge) {\n      // node moved\n      node.x = position.x;\n      node.y = position.y;\n\n      // Update edges for node\n      this.renderConnectedEdgesFromNode(nodeMapNode, true);\n      this.asyncRenderNode(node);\n    } else if (\n      (canCreateEdge && canCreateEdge(nodeId)) ||\n      this.state.draggingEdge\n    ) {\n      // render new edge\n      this.syncRenderEdge({ source: nodeId, targetPosition: position });\n      this.setState({ draggingEdge: true });\n    }\n  };\n\n  createNewEdge() {\n    const { canCreateEdge, nodeKey, onCreateEdge } = this.props;\n    const { edgesMap, edgeEndNode, hoveredNodeData } = this.state;\n\n    if (!hoveredNodeData) {\n      return;\n    }\n\n    GraphUtils.removeElementFromDom('edge-custom-container');\n\n    if (edgeEndNode) {\n      const mapId1 = `${hoveredNodeData[nodeKey]}_${edgeEndNode[nodeKey]}`;\n      const mapId2 = `${edgeEndNode[nodeKey]}_${hoveredNodeData[nodeKey]}`;\n\n      if (\n        edgesMap &&\n        hoveredNodeData !== edgeEndNode &&\n        canCreateEdge &&\n        canCreateEdge(hoveredNodeData, edgeEndNode) &&\n        !edgesMap[mapId1] &&\n        !edgesMap[mapId2]\n      ) {\n        this.setState({\n          componentUpToDate: false,\n          draggedEdge: null,\n          draggingEdge: false,\n        });\n\n        // we expect the parent website to set the selected property to the new edge when it's created\n        onCreateEdge(hoveredNodeData, edgeEndNode);\n      } else {\n        // make the system understand that the edge creation process is done even though it didn't work.\n        this.setState({\n          edgeEndNode: null,\n          draggingEdge: false,\n        });\n      }\n    }\n  }\n\n  handleNodeUpdate = (position: any, nodeId: string, shiftKey: boolean) => {\n    const { onUpdateNode, readOnly } = this.props;\n\n    if (readOnly) {\n      return;\n    }\n\n    // Detect if edge is being drawn and link to hovered node\n    // This will handle a new edge\n    if (shiftKey) {\n      this.createNewEdge();\n    } else {\n      const nodeMap = this.getNodeById(nodeId);\n\n      if (nodeMap) {\n        Object.assign(nodeMap.node, position);\n        onUpdateNode(nodeMap.node);\n      }\n    }\n\n    // force a re-render\n    this.setState({\n      componentUpToDate: false,\n      focused: true,\n      // Setting hoveredNode to false here because the layout engine doesn't\n      // fire the mouseLeave event when nodes are moved.\n      hoveredNode: false,\n      svgClicked: true,\n    });\n  };\n\n  handleNodeMouseEnter = (event: any, data: any, hovered: boolean) => {\n    // hovered is false when creating edges\n    if (hovered && !this.state.hoveredNode) {\n      this.setState({\n        hoveredNode: true,\n        hoveredNodeData: data,\n      });\n    } else if (!hovered && this.state.hoveredNode && this.state.draggingEdge) {\n      this.setState({\n        edgeEndNode: data,\n      });\n    } else {\n      this.setState({\n        hoveredNode: true,\n        hoveredNodeData: data,\n      });\n    }\n  };\n\n  handleNodeMouseLeave = (event: any, data: any) => {\n    if (\n      (d3.event &&\n        d3.event.toElement &&\n        GraphUtils.findParent(d3.event.toElement, '.node')) ||\n      (event &&\n        event.relatedTarget &&\n        GraphUtils.findParent(event.relatedTarget, '.node')) ||\n      (d3.event && d3.event.buttons === 1) ||\n      (event && event.buttons === 1)\n    ) {\n      // still within a node\n      return;\n    }\n\n    if (event && event.relatedTarget) {\n      if (event.relatedTarget.classList.contains('edge-overlay-path')) {\n        return;\n      }\n\n      this.setState({ hoveredNode: false, edgeEndNode: null });\n    }\n  };\n\n  handleNodeSelected = (\n    node: INode,\n    nodeId: string,\n    creatingEdge: boolean,\n    event?: any\n  ) => {\n    const newState = {\n      componentUpToDate: false,\n      selectedNodeObj: {\n        nodeId,\n        node,\n      },\n    };\n\n    this.setState(newState);\n\n    if (!creatingEdge) {\n      this.props.onSelectNode(node, event);\n    }\n  };\n\n  // One can't attach handlers to 'markers' or obtain them from the event.target\n  // If the click occurs within a certain radius of edge target, assume the click\n  // occurred on the arrow\n  isArrowClicked(edge: IEdge | null) {\n    const { edgeArrowSize } = this.props;\n    const eventTarget = d3.event.sourceEvent.target;\n    const arrowSize = edgeArrowSize || 0;\n\n    if (!edge || eventTarget.tagName !== 'path') {\n      return false; // If the handle is clicked\n    }\n\n    const xycoords = d3.mouse(eventTarget);\n\n    if (edge.target == null) {\n      return false;\n    }\n\n    const source = {\n      x: xycoords[0],\n      y: xycoords[1],\n    };\n    const edgeCoords = Edge.parsePathToXY(\n      Edge.getEdgePathElement(edge, this.viewWrapper.current)\n    );\n\n    // the arrow is clicked if the xycoords are within edgeArrowSize of edgeCoords.target[x,y]\n    return (\n      source.x < edgeCoords.target.x + arrowSize &&\n      source.x > edgeCoords.target.x - arrowSize &&\n      source.y < edgeCoords.target.y + arrowSize &&\n      source.y > edgeCoords.target.y - arrowSize\n    );\n  }\n\n  zoomFilter() {\n    if (d3.event.button || d3.event.ctrlKey) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // Keeps 'zoom' contained\n  containZoom() {\n    const stop = d3.event.button || d3.event.ctrlKey;\n\n    if (stop) {\n      d3.event.stopImmediatePropagation(); // stop zoom\n    }\n  }\n\n  handleZoomStart = (event: any) => {\n    // Zoom start events also handle edge clicks. We need to determine if an edge\n    // was clicked and deal with that scenario.\n    const sourceEvent = event.sourceEvent;\n\n    if (\n      // graph can't be modified\n      this.props.readOnly ||\n      // no sourceEvent, not an action on an element\n      !sourceEvent ||\n      // not a click event\n      (sourceEvent && !sourceEvent.buttons) ||\n      // not an edge click area\n      (sourceEvent &&\n        !sourceEvent.target.classList.contains('edge-overlay-path'))\n    ) {\n      return false;\n    }\n\n    // Clicked on the edge.\n    const { target } = sourceEvent;\n    const edgeId = target.id;\n    const edge =\n      this.state.edgesMap && this.state.edgesMap[edgeId]\n        ? this.state.edgesMap[edgeId].edge\n        : null;\n\n    // Only move edges if the arrow is dragged\n    if (!this.isArrowClicked(edge) || !edge) {\n      return false;\n    }\n\n    this.removeEdgeElement(edge.source, edge.target);\n    this.setState({ draggingEdge: true, draggedEdge: edge });\n    this.dragEdge(edge, d3.mouse);\n  };\n\n  getMouseCoordinates(mouse: typeof d3.mouse) {\n    let mouseCoordinates = [0, 0];\n\n    if (this.selectedView && mouse) {\n      mouseCoordinates = mouse(this.selectedView.node());\n    }\n\n    return mouseCoordinates;\n  }\n\n  dragEdge(draggedEdge?: IEdge, mouse: typeof d3.mouse) {\n    const { nodeSize, nodeKey } = this.props;\n\n    draggedEdge = draggedEdge || this.state.draggedEdge;\n\n    if (!draggedEdge) {\n      return;\n    }\n\n    const mouseCoordinates = this.getMouseCoordinates(mouse);\n    const targetPosition = {\n      x: mouseCoordinates[0],\n      y: mouseCoordinates[1],\n    };\n\n    const off = Edge.calculateOffset(\n      nodeSize,\n      (this.getNodeById(draggedEdge.source): any).node,\n      targetPosition,\n      nodeKey\n    );\n\n    targetPosition.x += off.xOff;\n    targetPosition.y += off.yOff;\n    this.syncRenderEdge({ source: draggedEdge.source, targetPosition });\n    this.setState({\n      draggedEdge,\n      draggingEdge: true,\n    });\n  }\n\n  // View 'zoom' handler\n  handleZoom = (event: any) => {\n    const { draggingEdge } = this.state;\n    const transform: IViewTransform = event.transform;\n\n    if (!draggingEdge) {\n      d3.select(this.view).attr('transform', transform);\n\n      // prevent re-rendering on zoom\n      if (this.state.viewTransform !== transform) {\n        this.setState(\n          {\n            viewTransform: transform,\n            draggedEdge: null,\n            draggingEdge: false,\n          },\n          () => {\n            // force the child components which are related to zoom level to update\n            this.renderGraphControls();\n          }\n        );\n      }\n    } else if (draggingEdge) {\n      this.dragEdge(undefined, d3.mouse);\n\n      return false;\n    }\n  };\n\n  handleZoomEnd = () => {\n    const { draggingEdge, draggedEdge, edgeEndNode } = this.state;\n\n    const { nodeKey } = this.props;\n\n    if (!draggingEdge || !draggedEdge) {\n      if (draggingEdge && !draggedEdge) {\n        // This is a bad case, sometimes when the graph loses focus while an edge\n        // is being created it doesn't set draggingEdge to false. This fixes that case.\n        this.setState({\n          draggingEdge: false,\n        });\n      }\n\n      return;\n    }\n\n    // Zoom start events also handle edge clicks. We need to determine if an edge\n    // was clicked and deal with that scenario.\n    const draggedEdgeCopy = { ...this.state.draggedEdge };\n\n    // remove custom edge\n    GraphUtils.removeElementFromDom('edge-custom-container');\n    this.setState(\n      {\n        draggedEdge: null,\n        draggingEdge: false,\n        hoveredNode: false,\n      },\n      () => {\n        // handle creating or swapping edges\n        const sourceNodeById = this.getNodeById(draggedEdge.source);\n        const targetNodeById = this.getNodeById(draggedEdge.target);\n\n        if (!sourceNodeById || !targetNodeById) {\n          return;\n        }\n\n        const sourceNode = sourceNodeById.node;\n\n        if (\n          edgeEndNode &&\n          !this.getEdgeBySourceTarget(\n            draggedEdge.source,\n            edgeEndNode[nodeKey]\n          ) &&\n          this.canSwap(sourceNode, edgeEndNode, draggedEdge)\n        ) {\n          // determine the target node and update the edge\n          draggedEdgeCopy.target = edgeEndNode[nodeKey];\n          this.syncRenderEdge(draggedEdgeCopy);\n          this.props.onSwapEdge(sourceNodeById.node, edgeEndNode, draggedEdge);\n        } else {\n          // this resets the dragged edge back to its original position.\n          this.syncRenderEdge(draggedEdge);\n        }\n      }\n    );\n  };\n\n  // Zooms to contents of this.refs.entities\n  handleZoomToFit = () => {\n    const entities = d3.select(this.entities).node();\n\n    if (!entities) {\n      return;\n    }\n\n    const viewBBox = entities.getBBox ? entities.getBBox() : null;\n\n    if (!viewBBox) {\n      return;\n    }\n\n    this.handleZoomToFitImpl(viewBBox, this.props.zoomDur);\n  };\n\n  handleZoomToFitImpl = (viewBBox: IBBox, zoomDur: number = 0) => {\n    if (!this.viewWrapper.current) {\n      return;\n    }\n\n    const parent = d3.select(this.viewWrapper.current).node();\n    const width = parent.clientWidth;\n    const height = parent.clientHeight;\n    const minZoom = this.props.minZoom || 0;\n    const maxZoom = this.props.maxZoom || 2;\n\n    const next = {\n      k: (minZoom + maxZoom) / 2,\n      x: 0,\n      y: 0,\n    };\n\n    if (viewBBox.width > 0 && viewBBox.height > 0) {\n      // There are entities\n      const dx = viewBBox.width;\n      const dy = viewBBox.height;\n      const x = viewBBox.x + viewBBox.width / 2;\n      const y = viewBBox.y + viewBBox.height / 2;\n\n      next.k = 0.9 / Math.max(dx / width, dy / height);\n\n      if (next.k < minZoom) {\n        next.k = minZoom;\n      } else if (next.k > maxZoom) {\n        next.k = maxZoom;\n      }\n\n      next.x = width / 2 - next.k * x;\n      next.y = height / 2 - next.k * y;\n    }\n\n    this.setZoom(next.k, next.x, next.y, zoomDur);\n  };\n\n  // Updates current viewTransform with some delta\n  modifyZoom = (\n    modK: number = 0,\n    modX: number = 0,\n    modY: number = 0,\n    dur: number = 0\n  ) => {\n    const parent = d3.select(this.viewWrapper.current).node();\n    const center = {\n      x: parent.clientWidth / 2,\n      y: parent.clientHeight / 2,\n    };\n    const extent = this.zoom.scaleExtent();\n    const viewTransform: any = this.state.viewTransform;\n\n    const next = {\n      k: viewTransform.k,\n      x: viewTransform.x,\n      y: viewTransform.y,\n    };\n\n    const targetZoom = next.k * (1 + modK);\n\n    next.k = targetZoom;\n\n    if (targetZoom < extent[0] || targetZoom > extent[1]) {\n      return false;\n    }\n\n    const translate0 = {\n      x: (center.x - next.x) / next.k,\n      y: (center.y - next.y) / next.k,\n    };\n\n    const l = {\n      x: translate0.x * next.k + next.x,\n      y: translate0.y * next.k + next.y,\n    };\n\n    next.x += center.x - l.x + modX;\n    next.y += center.y - l.y + modY;\n    this.setZoom(next.k, next.x, next.y, dur);\n\n    return true;\n  };\n\n  // Programmatically resets zoom\n  setZoom(k: number = 1, x: number = 0, y: number = 0, dur: number = 0) {\n    const t = d3.zoomIdentity.translate(x, y).scale(k);\n\n    d3.select(this.viewWrapper.current)\n      .select('svg')\n      .transition()\n      .duration(dur)\n      .call(this.zoom.transform, t);\n  }\n\n  // Renders 'graph' into view element\n  renderView() {\n    // Update the view w/ new zoom/pan\n    this.selectedView.attr('transform', this.state.viewTransform);\n\n    clearTimeout(this.renderNodesTimeout);\n    this.renderNodesTimeout = setTimeout(this.renderNodes);\n  }\n\n  getNodeComponent = (id: string, node: INode) => {\n    const {\n      nodeTypes,\n      nodeSubtypes,\n      nodeSize,\n      renderNode,\n      renderNodeText,\n      nodeKey,\n      maxTitleChars,\n    } = this.props;\n\n    return (\n      <Node\n        key={id}\n        id={id}\n        data={node}\n        nodeTypes={nodeTypes}\n        nodeSize={nodeSize}\n        nodeKey={nodeKey}\n        nodeSubtypes={nodeSubtypes}\n        onNodeMouseEnter={this.handleNodeMouseEnter}\n        onNodeMouseLeave={this.handleNodeMouseLeave}\n        onNodeMove={this.handleNodeMove}\n        onNodeUpdate={this.handleNodeUpdate}\n        onNodeSelected={this.handleNodeSelected}\n        renderNode={renderNode}\n        renderNodeText={renderNodeText}\n        isSelected={this.state.selectedNodeObj.node === node}\n        layoutEngine={this.layoutEngine}\n        viewWrapperElem={this.viewWrapper.current}\n        centerNodeOnMove={this.props.centerNodeOnMove}\n        maxTitleChars={maxTitleChars}\n      />\n    );\n  };\n\n  renderNodes = () => {\n    if (!this.entities) {\n      return;\n    }\n\n    this.state.nodes.forEach((node, i) => {\n      this.asyncRenderNode(node);\n    });\n  };\n\n  asyncRenderNode(node: INode) {\n    const nodeKey = this.props.nodeKey;\n    const timeoutId = `nodes-${node[nodeKey]}`;\n\n    cancelAnimationFrame(this.nodeTimeouts[timeoutId]);\n    this.nodeTimeouts[timeoutId] = requestAnimationFrame(() => {\n      this.syncRenderNode(node);\n    });\n  }\n\n  syncRenderNode(node: INode) {\n    const nodeKey = this.props.nodeKey;\n    const id = `node-${node[nodeKey]}`;\n    const element: any = this.getNodeComponent(id, node);\n    const nodesMapNode = this.getNodeById(node[nodeKey]);\n\n    this.renderNode(id, element);\n\n    if (nodesMapNode) {\n      this.renderConnectedEdgesFromNode(nodesMapNode);\n    }\n  }\n\n  renderNode(id: string, element: Element) {\n    if (!this.entities) {\n      return null;\n    }\n\n    const containerId = `${id}-container`;\n    let nodeContainer: HTMLElement | Element | null = document.getElementById(\n      containerId\n    );\n\n    if (!nodeContainer) {\n      nodeContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'g'\n      );\n      nodeContainer.id = containerId;\n      this.entities.appendChild(nodeContainer);\n    }\n\n    // ReactDOM.render replaces the insides of an element This renders the element\n    // into the nodeContainer\n    const anyElement: any = element;\n\n    ReactDOM.render(anyElement, nodeContainer);\n  }\n\n  renderConnectedEdgesFromNode(\n    node: INodeMapNode,\n    nodeMoving: boolean = false\n  ) {\n    if (this.state.draggingEdge) {\n      return;\n    }\n\n    node.incomingEdges.forEach(edge => {\n      this.asyncRenderEdge(edge, nodeMoving);\n    });\n    node.outgoingEdges.forEach(edge => {\n      this.asyncRenderEdge(edge, nodeMoving);\n    });\n  }\n\n  isEdgeSelected = (edge: IEdge) => {\n    return (\n      !!this.state.selectedEdgeObj &&\n      !!this.state.selectedEdgeObj.edge &&\n      this.state.selectedEdgeObj.edge.source === edge.source &&\n      this.state.selectedEdgeObj.edge.target === edge.target\n    );\n  };\n\n  getEdgeComponent = (edge: IEdge | any) => {\n    const sourceNodeMapNode = this.getNodeById(edge.source);\n    const sourceNode = sourceNodeMapNode ? sourceNodeMapNode.node : null;\n    const targetNodeMapNode = this.getNodeById(edge.target);\n    const targetNode = targetNodeMapNode ? targetNodeMapNode.node : null;\n    const targetPosition = edge.targetPosition;\n    const { edgeTypes, edgeHandleSize, nodeSize, nodeKey } = this.props;\n\n    return (\n      <Edge\n        data={edge}\n        edgeTypes={edgeTypes}\n        edgeHandleSize={edgeHandleSize}\n        nodeSize={nodeSize}\n        sourceNode={sourceNode}\n        targetNode={targetNode || targetPosition}\n        nodeKey={nodeKey}\n        viewWrapperElem={this.viewWrapper.current}\n        isSelected={this.isEdgeSelected(edge)}\n        rotateEdgeHandle={this.props.rotateEdgeHandle}\n      />\n    );\n  };\n\n  renderEdge = (\n    id: string,\n    element: any,\n    edge: IEdge,\n    nodeMoving: boolean = false\n  ) => {\n    if (!this.entities) {\n      return null;\n    }\n\n    let containerId = `${id}-container`;\n    const customContainerId = `${id}-custom-container`;\n    const { draggedEdge } = this.state;\n    const { afterRenderEdge } = this.props;\n    let edgeContainer = document.getElementById(containerId);\n\n    if (nodeMoving && edgeContainer) {\n      edgeContainer.style.display = 'none';\n      containerId = `${id}-custom-container`;\n      edgeContainer = document.getElementById(containerId);\n    } else if (edgeContainer) {\n      const customContainer = document.getElementById(customContainerId);\n\n      edgeContainer.style.display = '';\n\n      if (customContainer) {\n        customContainer.remove();\n      }\n    }\n\n    if (!edgeContainer && edge !== draggedEdge) {\n      const newSvgEdgeContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'g'\n      );\n\n      newSvgEdgeContainer.id = containerId;\n      this.entities.appendChild(newSvgEdgeContainer);\n      edgeContainer = newSvgEdgeContainer;\n    }\n\n    // ReactDOM.render replaces the insides of an element This renders the element\n    // into the edgeContainer\n    if (edgeContainer) {\n      ReactDOM.render(element, edgeContainer);\n\n      if (afterRenderEdge) {\n        return afterRenderEdge(\n          id,\n          element,\n          edge,\n          edgeContainer,\n          this.isEdgeSelected(edge)\n        );\n      }\n    }\n  };\n\n  asyncRenderEdge = (edge: IEdge, nodeMoving: boolean = false) => {\n    if (edge.source == null || edge.target == null) {\n      return;\n    }\n\n    const timeoutId = `edges-${edge.source}-${edge.target}`;\n\n    cancelAnimationFrame(this.edgeTimeouts[timeoutId]);\n    this.edgeTimeouts[timeoutId] = requestAnimationFrame(() => {\n      this.syncRenderEdge(edge, nodeMoving);\n    });\n  };\n\n  syncRenderEdge(edge: IEdge | any, nodeMoving: boolean = false) {\n    if (edge.source == null) {\n      return;\n    }\n\n    // We have to use the 'custom' id when we're drawing a new node\n    const idVar =\n      edge.target != null ? `${edge.source}-${edge.target}` : 'custom';\n    const id = `edge-${idVar}`;\n    const element = this.getEdgeComponent(edge);\n\n    this.renderEdge(id, element, edge, nodeMoving);\n  }\n\n  renderEdges = () => {\n    const { edges, draggingEdge } = this.state;\n\n    if (!this.entities || draggingEdge) {\n      return;\n    }\n\n    for (let i = 0; i < edges.length; i++) {\n      this.asyncRenderEdge(edges[i]);\n    }\n  };\n\n  /*\n   * GraphControls is a special child component. To maximize responsiveness we disable\n   * rendering on zoom level changes, but this component still needs to update.\n   * This function ensures that it updates into the container quickly upon zoom changes\n   * without causing a full GraphView render.\n   */\n  renderGraphControls() {\n    const { showGraphControls, minZoom, maxZoom } = this.props;\n    const { viewTransform } = this.state;\n\n    if (!showGraphControls || !this.viewWrapper) {\n      return;\n    }\n\n    const graphControlsWrapper = this.viewWrapper.current.ownerDocument.getElementById(\n      'react-digraph-graph-controls-wrapper'\n    );\n\n    if (!graphControlsWrapper) {\n      return;\n    }\n\n    ReactDOM.render(\n      <GraphControls\n        ref={this.graphControls}\n        minZoom={minZoom}\n        maxZoom={maxZoom}\n        zoomLevel={viewTransform ? viewTransform.k : 1}\n        zoomToFit={this.handleZoomToFit}\n        modifyZoom={this.modifyZoom}\n      />,\n      graphControlsWrapper\n    );\n  }\n\n  render() {\n    const {\n      edgeArrowSize,\n      gridSpacing,\n      gridDotSize,\n      nodeTypes,\n      nodeSubtypes,\n      edgeTypes,\n      renderDefs,\n      gridSize,\n      backgroundFillId,\n      renderBackground,\n    } = this.props;\n\n    return (\n      <div className=\"view-wrapper\" ref={this.viewWrapper}>\n        <svg className=\"graph\" ref={this.graphSvg}>\n          <Defs\n            edgeArrowSize={edgeArrowSize}\n            gridSpacing={gridSpacing}\n            gridDotSize={gridDotSize}\n            nodeTypes={nodeTypes}\n            nodeSubtypes={nodeSubtypes}\n            edgeTypes={edgeTypes}\n            renderDefs={renderDefs}\n          />\n          <g className=\"view\" ref={el => (this.view = el)}>\n            <Background\n              gridSize={gridSize}\n              backgroundFillId={backgroundFillId}\n              renderBackground={renderBackground}\n            />\n\n            <g className=\"entities\" ref={el => (this.entities = el)} />\n          </g>\n        </svg>\n        <div\n          id=\"react-digraph-graph-controls-wrapper\"\n          className=\"graph-controls-wrapper\"\n        />\n      </div>\n    );\n  }\n\n  /* Imperative API */\n  panToEntity(entity: IEdge | INode, zoom: boolean) {\n    const { viewTransform } = this.state;\n    const parent = this.viewWrapper.current;\n    const entityBBox = entity ? entity.getBBox() : null;\n    const maxZoom = this.props.maxZoom || 2;\n\n    if (!parent || !entityBBox) {\n      return;\n    }\n\n    const width = parent.clientWidth;\n    const height = parent.clientHeight;\n\n    const next = {\n      k: viewTransform.k,\n      x: 0,\n      y: 0,\n    };\n\n    const x = entityBBox.x + entityBBox.width / 2;\n    const y = entityBBox.y + entityBBox.height / 2;\n\n    if (zoom) {\n      next.k =\n        0.9 / Math.max(entityBBox.width / width, entityBBox.height / height);\n\n      if (next.k > maxZoom) {\n        next.k = maxZoom;\n      }\n    }\n\n    next.x = width / 2 - next.k * x;\n    next.y = height / 2 - next.k * y;\n\n    this.setZoom(next.k, next.x, next.y, this.props.zoomDur);\n  }\n\n  panToNode(id: string, zoom?: boolean = false) {\n    if (!this.entities) {\n      return;\n    }\n\n    const node = this.entities.querySelector(`#node-${id}-container`);\n\n    this.panToEntity(node, zoom);\n  }\n\n  panToEdge(source: string, target: string, zoom?: boolean = false) {\n    if (!this.entities) {\n      return;\n    }\n\n    const edge = this.entities.querySelector(\n      `#edge-${source}-${target}-container`\n    );\n\n    this.panToEntity(edge, zoom);\n  }\n}\n\nexport default GraphView;\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n/*\n  Example config for GraphView component\n*/\nimport * as React from 'react';\n\nexport const NODE_KEY = 'id'; // Key used to identify nodes\n\n// These keys are arbitrary (but must match the config)\n// However, GraphView renders text differently for empty types\n// so this has to be passed in if that behavior is desired.\nexport const EMPTY_TYPE = 'customEmpty'; // Empty node type\nexport const POLY_TYPE = 'poly';\nexport const SPECIAL_TYPE = 'special';\nexport const SKINNY_TYPE = 'skinny';\nexport const SPECIAL_CHILD_SUBTYPE = 'specialChild';\nexport const EMPTY_EDGE_TYPE = 'emptyEdge';\nexport const SPECIAL_EDGE_TYPE = 'specialEdge';\nexport const COMPLEX_CIRCLE_TYPE = 'complexCircle';\n\nexport const nodeTypes = [EMPTY_TYPE, POLY_TYPE, SPECIAL_TYPE, SKINNY_TYPE];\nexport const edgeTypes = [EMPTY_EDGE_TYPE, SPECIAL_EDGE_TYPE];\n\nconst EmptyNodeShape = (\n  <symbol viewBox=\"0 0 154 154\" width=\"154\" height=\"154\" id=\"emptyNode\">\n    <circle cx=\"77\" cy=\"77\" r=\"76\" />\n  </symbol>\n);\n\nconst CustomEmptyShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"customEmpty\">\n    <circle cx=\"50\" cy=\"50\" r=\"45\" />\n  </symbol>\n);\n\nconst SpecialShape = (\n  <symbol viewBox=\"-27 0 154 154\" id=\"special\" width=\"154\" height=\"154\">\n    <rect transform=\"translate(50) rotate(45)\" width=\"109\" height=\"109\" />\n  </symbol>\n);\n\nconst PolyShape = (\n  <symbol viewBox=\"0 0 88 72\" id=\"poly\" width=\"88\" height=\"88\">\n    <path d=\"M 0 36 18 0 70 0 88 36 70 72 18 72Z\" />\n  </symbol>\n);\n\nconst ComplexCircleShape = (\n  <symbol viewBox=\"0 0 100 100\" id=\"complexCircle\" width=\"100\" height=\"100\">\n    <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"transparent\" stroke=\"transparent\" />\n    <circle cx=\"50\" cy=\"50\" r=\"34\" />\n    <path\n      d=\"M50,0a50,50,0,1,0,50,50A50,50,0,0,0,50,0Zm0,90A40,40,0,1,1,90,50,40,40,0,0,1,50,90Z\"\n      data-intersect-ignore=\"true\"\n    />\n  </symbol>\n);\n\nconst SkinnyShape = (\n  <symbol viewBox=\"0 0 154 54\" width=\"154\" height=\"54\" id=\"skinny\">\n    <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"154\" height=\"54\" />\n  </symbol>\n);\n\nconst SpecialChildShape = (\n  <symbol viewBox=\"0 0 154 154\" id=\"specialChild\">\n    <rect\n      x=\"2.5\"\n      y=\"0\"\n      width=\"154\"\n      height=\"154\"\n      fill=\"rgba(30, 144, 255, 0.12)\"\n    />\n  </symbol>\n);\n\nconst EmptyEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"emptyEdge\">\n    <circle cx=\"25\" cy=\"25\" r=\"8\" fill=\"currentColor\" />\n  </symbol>\n);\n\nconst SpecialEdgeShape = (\n  <symbol viewBox=\"0 0 50 50\" id=\"specialEdge\">\n    <rect\n      transform=\"rotate(45)\"\n      x=\"27.5\"\n      y=\"-7.5\"\n      width=\"15\"\n      height=\"15\"\n      fill=\"currentColor\"\n    />\n  </symbol>\n);\n\nexport default {\n  EdgeTypes: {\n    emptyEdge: {\n      shape: EmptyEdgeShape,\n      shapeId: '#emptyEdge',\n    },\n    specialEdge: {\n      shape: SpecialEdgeShape,\n      shapeId: '#specialEdge',\n    },\n  },\n  NodeSubtypes: {\n    specialChild: {\n      shape: SpecialChildShape,\n      shapeId: '#specialChild',\n    },\n  },\n  NodeTypes: {\n    emptyNode: {\n      shape: EmptyNodeShape,\n      shapeId: '#emptyNode',\n      typeText: 'None',\n    },\n    empty: {\n      shape: CustomEmptyShape,\n      shapeId: '#empty',\n      typeText: 'None',\n    },\n    special: {\n      shape: SpecialShape,\n      shapeId: '#special',\n      typeText: 'Special',\n    },\n    skinny: {\n      shape: SkinnyShape,\n      shapeId: '#skinny',\n      typeText: 'Skinny',\n    },\n    poly: {\n      shape: PolyShape,\n      shapeId: '#poly',\n      typeText: 'Poly',\n    },\n    complexCircle: {\n      shape: ComplexCircleShape,\n      shapeId: '#complexCircle',\n      typeText: '#complexCircle',\n    },\n  },\n};\n","// @flow\n/*\n  Copyright(c) 2018 Uber Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n          http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\n\n/*\n  Example usage of GraphView component\n*/\n\nimport * as React from 'react';\n\nimport GraphView from '../components/graph-view.js'\n\nimport {\n  type IEdgeType as IEdge,\n  type INodeType as INode,\n  type LayoutEngineType,\n} from '../';\nimport GraphConfig, {\n  edgeTypes,\n  EMPTY_EDGE_TYPE,\n  EMPTY_TYPE,\n  NODE_KEY,\n  nodeTypes,\n  COMPLEX_CIRCLE_TYPE,\n  POLY_TYPE,\n  SPECIAL_CHILD_SUBTYPE,\n  SPECIAL_EDGE_TYPE,\n  SPECIAL_TYPE,\n  SKINNY_TYPE,\n} from './graph-config'; // Configures node/edge types\n\ntype IGraph = {\n  nodes: INode[],\n  edges: IEdge[],\n};\n\n// NOTE: Edges must have 'source' & 'target' attributes\n// In a more realistic use case, the graph would probably originate\n// elsewhere in the App or be generated from some other state upstream of this component.\n\nvar sample: IGraph = {\n  edges: [\n    // {\n    //   handleText: '5',\n    //   handleTooltipText: '5',\n    //   source: 'start1',\n    //   target: 'a1',\n    //   type: SPECIAL_EDGE_TYPE,\n    // },\n    // {\n    //   handleText: '54',\n    //   source: 'a2',\n    //   target: 'a4',\n    //   type: EMPTY_EDGE_TYPE,\n    // }\n  ],\n  nodes: [\n    // {\n    //   id: 'start1',\n    //   title: 'Start (0)',\n    //   type: SPECIAL_TYPE,\n    // },\n    // {\n    //   id: 'a1',\n    //   title: 'Node A (1)',\n    //   type: SPECIAL_TYPE,\n    //   x: 258.3976135253906,\n    //   y: 331.9783248901367,\n    // },\n    // {\n    //   id: 'a2',\n    //   subtype: SPECIAL_CHILD_SUBTYPE,\n    //   title: 'Node B (2)',\n    //   type: EMPTY_TYPE,\n    //   x: 593.9393920898438,\n    //   y: 260.6060791015625,\n    // },\n    // {\n    //   id: 'a4',\n    //   title: 'Node D (4)',\n    //   type: EMPTY_TYPE,\n    //   x: 600.5757598876953,\n    //   y: 600.81818389892578,\n    // }\n  ],\n};\n\n\nconst fetchData = async (artist1, artist2, token) => {\n  const result = await fetch('/fetchArtistMap', {\n    method: 'post',\n    body: JSON.stringify({\"artist1\": artist1, \"artist2\" : artist2, \"token\" : token, \"numRelated\" : 5}),\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  });\n  const body = await result.json();\n  return body;\n};\n\nconst expandData = async (artist1, artist2, token) => {\n  const result = await fetch('/expandArtistMap', {\n    method: 'post',\n    body: JSON.stringify({\"artist1ID\": artist1, \"artist2ID\" : artist2, \"token\" : token, \"numRelated\" : 5}),\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  });\n  const body = await result.json();\n  return body;\n};\n\n\n\nfunction generateSample(totalNodes) {\n  const generatedSample: IGraph = {\n    edges: [],\n    nodes: [],\n  };\n  let y = 0;\n  let x = 0;\n\n  const numNodes = totalNodes ? totalNodes : 0;\n\n  // generate large array of nodes\n  // These loops are fast enough. 1000 nodes = .45ms + .34ms\n  // 2000 nodes = .86ms + .68ms\n  // implying a linear relationship with number of nodes.\n  for (let i = 1; i <= numNodes; i++) {\n    if (i % 20 === 0) {\n      y++;\n      x = 0;\n    } else {\n      x++;\n    }\n\n    generatedSample.nodes.push({\n      id: `a${i}`,\n      title: `Node ${i}`,\n      type: nodeTypes[Math.floor(nodeTypes.length * Math.random())],\n      x: 0 + 200 * x,\n      y: 0 + 200 * y,\n    });\n  }\n  // link each node to another node\n  for (let i = 1; i < numNodes; i++) {\n    generatedSample.edges.push({\n      source: `a${i}`,\n      target: `a${i + 1}`,\n      type: edgeTypes[Math.floor(edgeTypes.length * Math.random())],\n    });\n  }\n\n  return generatedSample;\n}\n\ntype IGraphProps = {};\n\ntype IGraphState = {\n  graph: any,\n  selected: any,\n  totalNodes: number,\n  copiedNode: any,\n  layoutEngineType?: LayoutEngineType,\n  side1SelectedNode : any,\n  side2SelectedNode : any,\n  side1Nodes : any,\n  side2Nodes : any,\n//EITAN\n\n};\n\nclass Graph extends React.Component<IGraphProps, IGraphState> {\n  GraphView;\n\n  constructor(props: IGraphProps) {\n    super(props);\n\n    this.state = {\n      copiedNode: null,\n      graph: sample,\n      layoutEngineType: undefined,\n      selected: null,\n      totalNodes: sample.nodes.length,\n      side1SelectedNode : {\"name\" : localStorage.getItem('artist1')},\n      side2SelectedNode : {\"name\" : localStorage.getItem('artist2')},\n      side1Nodes : [],\n      side2Nodes : [],\n    };\n\n    this.GraphView = React.createRef();\n  }\n\n\n   componentDidMount(){\n    const token = localStorage.getItem('token');\n    const artist1 = localStorage.getItem('artist1');\n    const artist2 = localStorage.getItem('artist2');\n\n    fetchData(artist1,artist2,token)\n    .then(\n      (result) => {\n          console.log(result['artist1']['name']);\n          const newSample: IGraph = {\n            edges: [\n            ],\n            nodes: [\n            ],\n          };\n          const numRelated = result['related1'].length;\n          console.log(\"RELATED \" + numRelated);\n          const ySpace = 200;\n          const xSpace = 400;\n          const startX1 = 1000;\n          const startX2 = 0;\n\n          var artist1Node = {\n              id: result['artist1']['id'],\n              subtype: SPECIAL_CHILD_SUBTYPE,\n              title: result['artist1']['name'],\n              type: EMPTY_TYPE,\n              x: startX1,\n              y: 0,\n              side: 1,\n          };\n          newSample.nodes.push(artist1Node);\n          this.state.side1SelectedNode = artist1Node;\n\n          var artist2Node = {\n              id: result['artist2']['id'],\n              subtype: SPECIAL_CHILD_SUBTYPE,\n              title: result['artist2']['name'],\n              type: EMPTY_TYPE,\n              x: startX2,\n              y: 0,\n              side: 2,\n          };\n          newSample.nodes.push(artist2Node);\n          this.state.side2SelectedNode = artist2Node;\n\n          const startY = -1 * (numRelated/2 * ySpace);\n\n            for(var i=0; i<numRelated; i++){\n              var newNode = {\n                  id: result['related1'][i]['id'],\n                  subtype: SPECIAL_CHILD_SUBTYPE,\n                  title: result['related1'][i]['name'],\n                  type: EMPTY_TYPE,\n                  x: startX1 - xSpace,\n                  y: startY + i*ySpace,\n                  side: 1,\n              };\n              newSample.nodes.push(newNode);\n              this.state.side1Nodes.push(newNode);\n              newSample.edges.push({\n                  handleText: result['related1'][i][\"genresInCommon\"],\n                  handleTooltipText: '',\n                  source: result['artist1']['id'],\n                  target: result['related1'][i]['id'],\n                  type: SPECIAL_EDGE_TYPE,\n                });\n            }\n\n            for(var i=0; i<numRelated; i++){\n              var newNode = {\n                  id: result['related2'][i]['id'],\n                  subtype: SPECIAL_CHILD_SUBTYPE,\n                  title: result['related2'][i]['name'],\n                  type: EMPTY_TYPE,\n                  x: startX2 + xSpace,\n                  y: startY + i*ySpace,\n                  side: 2\n              };\n              newSample.nodes.push(newNode);\n              this.state.side2Nodes.push(newNode);\n              newSample.edges.push({\n                  handleText: result['related2'][i][\"genresInCommon\"],\n                  handleTooltipText: '',\n                  source: result['artist2']['id'],\n                  target: result['related2'][i]['id'],\n                  type: SPECIAL_EDGE_TYPE,\n                });\n            }\n\n          const newState = {\n              copiedNode: null,\n              graph: newSample,\n              layoutEngineType: undefined,\n              selected: null,\n              totalNodes: sample.nodes.length,\n            };\n\n          this.setState(newState);\n\n\n        });\n\n}\n\n  // Helper to find the index of a given node\n  getNodeIndex(searchNode: INode | any) {\n    return this.state.graph.nodes.findIndex(node => {\n      return node[NODE_KEY] === searchNode[NODE_KEY];\n    });\n  }\n\n  // Helper to find the index of a given edge\n  getEdgeIndex(searchEdge: IEdge) {\n    return this.state.graph.edges.findIndex(edge => {\n      return (\n        edge.source === searchEdge.source && edge.target === searchEdge.target\n      );\n    });\n  }\n\n  // Given a nodeKey, return the corresponding node\n  getViewNode(nodeKey: string) {\n    const searchNode = {};\n\n    searchNode[NODE_KEY] = nodeKey;\n    const i = this.getNodeIndex(searchNode);\n\n    return this.state.graph.nodes[i];\n  }\n\n//EITAN READ THIS CODE IT MIGHT BE EASIER\n  makeItLarge = () => {\n    const graph = this.state.graph;\n    const generatedSample = generateSample(this.state.totalNodes);\n\n    graph.nodes = generatedSample.nodes;\n    graph.edges = generatedSample.edges;\n    this.setState(this.state);\n  };\n\n  addStartNode = () => {\n    const graph = this.state.graph;\n\n    // using a new array like this creates a new memory reference\n    // this will force a re-render\n    graph.nodes = [\n      {\n        id: Date.now(),\n        title: 'Node A',\n        type: SPECIAL_TYPE,\n        x: 0,\n        y: 0,\n      },\n      ...this.state.graph.nodes,\n    ];\n    this.setState({\n      graph,\n    });\n  };\n\n  expandMap = () => {\n\n\n    //returns node index if it exists, -1 if not\n    function isNodeInArray(nodeID, nodeArray){\n      for(var i=0; i<nodeArray.length; i++){\n        if(nodeID == nodeArray[i].id){\n          console.log(\"node already in the map\");\n          return i;\n        }\n      }\n      return -1;\n    }\n\n    console.log(this.state.side1SelectedNode);\n    console.log(this.state.side2SelectedNode);\n    expandData(this.state.side1SelectedNode.id,this.state.side2SelectedNode.id, localStorage.getItem('token'))\n    .then(\n      (result) => {\n        const graph = this.state.graph;\n        graph.nodes = [\n            ...this.state.graph.nodes,\n        ];\n        //EXPAND MAP\n        const xSpace = 500;\n        const ySpace = 200;\n        var startY1 = this.state.side1SelectedNode.y;\n        const startX1 = this.state.side1SelectedNode.x;\n        var startY2 = this.state.side2SelectedNode.y;\n        const startX2 = this.state.side2SelectedNode.x;\n\n\n        const expandBy = [xSpace,-1*xSpace];\n        for(var i=0; i<graph.nodes.length; i++){\n          var node = graph.nodes[i];\n          if(node.side){\n            node.x+=expandBy[node.side-1];\n          }\n          graph[i] = node;\n        }\n\n        //ADD NODES TO CHOSEN\n        const numRelated = result[\"related1\"].length;\n        console.log(\"NUM RELATED \" + numRelated);\n        const maxNodes = 5;\n        var nodesAdded=0;\n\n        //SIDE 1\n        var i=0;\n        while(i<numRelated&&nodesAdded<maxNodes){\n          const id = result[\"related1\"][i]['id'];\n          if(isNodeInArray(id, this.state.side1Nodes)!=-1){\n            startY1 -= ySpace;\n            i++;\n            continue;\n          }\n          nodesAdded+=1;\n\n          var newNode = {\n              id: id,\n              subtype: SPECIAL_CHILD_SUBTYPE,\n              title: result['related1'][i]['name'],\n              type: EMPTY_TYPE,\n              x: startX1,\n              y: startY1 + i*ySpace,\n              side: 1,\n          };\n          graph.nodes.push(newNode);\n          this.state.side1Nodes.push(newNode);\n\n          //DONT FORGET TO ADD NODES TO SIDES\n\n          const otherSide = isNodeInArray(id, this.state.side2Nodes);\n\n          if(otherSide!=-1){\n            graph.edges.push({\n                handleText: '',\n                handleTooltipText: '',\n                source: id,\n                target: this.state.side2Nodes[otherSide],\n                type: SPECIAL_EDGE_TYPE,\n              });\n          }\n\n          graph.edges.push({\n              handleText: result['related1'][i][\"genresInCommon\"],\n              handleTooltipText: '',\n              source: this.state.side1SelectedNode.id,\n              target: id,\n              type: SPECIAL_EDGE_TYPE,\n            });\n            i++;\n        }\n\n\n        //SIDE2\n        nodesAdded =0;\n\n        for(var i=0; (i<numRelated&&nodesAdded<maxNodes); i++){\n          const id = result[\"related2\"][i]['id'];\n          if(isNodeInArray(id, this.state.side2Nodes)!=-1){\n            startY2 -=ySpace;\n            continue;\n          }\n          nodesAdded+=1;\n\n          var newNode = {\n              id: id,\n              subtype: SPECIAL_CHILD_SUBTYPE,\n              title: result['related2'][i]['name'],\n              type: EMPTY_TYPE,\n              x: startX2,\n              y: startY2 + i*ySpace,\n              side: 1,\n          };\n          graph.nodes.push(newNode);\n          this.state.side2Nodes.push(newNode);\n\n\n          const otherSide = isNodeInArray(id, this.state.side1Nodes);\n\n          if(otherSide!=-1){\n            graph.edges.push({\n            handleText: '',\n            handleTooltipText: '',\n            source: id,\n            target: this.state.side1Nodes[otherSide],\n            type: SPECIAL_EDGE_TYPE,\n            });\n          }\n\n          graph.edges.push({\n              handleText: result['related2'][i][\"genresInCommon\"],\n              handleTooltipText: '',\n              source: this.state.side2SelectedNode.id,\n              target: id,\n              type: SPECIAL_EDGE_TYPE,\n            });\n        }\n\n        var newState = this.state;\n        if(this.state.layoutEngineType!=\"SnapToGrid\"){\n          newState.layoutEngineType = \"SnapToGrid\";\n        }\n        else{\n          newState.layoutEngineType = \"None\";\n        }\n        newState.graph = graph;\n        this.setState(newState);\n      }\n    );\n  };\n\n  deleteStartNode = () => {\n    const graph = this.state.graph;\n\n    graph.nodes.splice(0, 1);\n    // using a new array like this creates a new memory reference\n    // this will force a re-render\n    graph.nodes = [...this.state.graph.nodes];\n    this.setState({\n      graph,\n    });\n  };\n\n  handleChange = (event: any) => {\n    this.setState(\n      {\n        totalNodes: parseInt(event.target.value || '0', 10),\n      },\n      this.makeItLarge\n    );\n  };\n\n  /*\n   * Handlers/Interaction\n   */\n\n  // Called by 'drag' handler, etc..\n  // to sync updates from D3 with the graph\n  onUpdateNode = (viewNode: INode) => {\n    const graph = this.state.graph;\n    const i = this.getNodeIndex(viewNode);\n\n    graph.nodes[i] = viewNode;\n    this.setState({ graph });\n  };\n\n  // Node 'mouseUp' handler\n  onSelectNode = (viewNode: INode | null) => {\n    var newState = this.state;\n\n    console.log(viewNode);\n\n    if(this.state.side1Nodes.includes(viewNode)){\n      newState.side1SelectedNode = viewNode;\n      console.log(\"SIDE 1\");\n    }\n    else if(this.state.side2Nodes.includes(viewNode)){\n      newState.side2SelectedNode = viewNode;\n      console.log(\"SIDE 2\");\n    }\n    newState.selected = viewNode;\n    // Deselect events will send Null viewNode\n    this.setState(newState);\n  };\n\n  // Edge 'mouseUp' handler\n  onSelectEdge = (viewEdge: IEdge) => {\n    this.setState({ selected: viewEdge });\n  };\n\n  // Updates the graph with a new node\n  onCreateNode = (x: number, y: number) => {\n    const graph = this.state.graph;\n\n    // This is just an example - any sort of logic\n    // could be used here to determine node type\n    // There is also support for subtypes. (see 'sample' above)\n    // The subtype geometry will underlay the 'type' geometry for a node\n    const type = Math.random() < 0.25 ? SPECIAL_TYPE : EMPTY_TYPE;\n\n    const viewNode = {\n      id: Date.now(),\n      title: '',\n      type,\n      x,\n      y,\n    };\n\n    graph.nodes = [...graph.nodes, viewNode];\n    this.setState({ graph });\n  };\n\n  // Deletes a node from the graph\n  onDeleteNode = (viewNode: INode, nodeId: string, nodeArr: INode[]) => {\n    const graph = this.state.graph;\n    // Delete any connected edges\n    const newEdges = graph.edges.filter((edge, i) => {\n      return (\n        edge.source !== viewNode[NODE_KEY] && edge.target !== viewNode[NODE_KEY]\n      );\n    });\n\n    graph.nodes = nodeArr;\n    graph.edges = newEdges;\n\n    this.setState({ graph, selected: null });\n  };\n\n\n  // Creates a new node between two edges\n  onCreateEdge = (sourceViewNode: INode, targetViewNode: INode) => {\n    const graph = this.state.graph;\n    // This is just an example - any sort of logic\n    // could be used here to determine edge type\n    const type =\n      sourceViewNode.type === SPECIAL_TYPE\n        ? SPECIAL_EDGE_TYPE\n        : EMPTY_EDGE_TYPE;\n\n    const viewEdge = {\n      source: sourceViewNode[NODE_KEY],\n      target: targetViewNode[NODE_KEY],\n      type,\n    };\n\n    // Only add the edge when the source node is not the same as the target\n    if (viewEdge.source !== viewEdge.target) {\n      graph.edges = [...graph.edges, viewEdge];\n      this.setState({\n        graph,\n        selected: viewEdge,\n      });\n    }\n  };\n\n  // Called when an edge is reattached to a different target.\n  onSwapEdge = (\n    sourceViewNode: INode,\n    targetViewNode: INode,\n    viewEdge: IEdge\n  ) => {\n    const graph = this.state.graph;\n    const i = this.getEdgeIndex(viewEdge);\n    const edge = JSON.parse(JSON.stringify(graph.edges[i]));\n\n    edge.source = sourceViewNode[NODE_KEY];\n    edge.target = targetViewNode[NODE_KEY];\n    graph.edges[i] = edge;\n    // reassign the array reference if you want the graph to re-render a swapped edge\n    graph.edges = [...graph.edges];\n\n    this.setState({\n      graph,\n      selected: edge,\n    });\n  };\n\n  // Called when an edge is deleted\n  onDeleteEdge = (viewEdge: IEdge, edges: IEdge[]) => {\n    const graph = this.state.graph;\n\n    graph.edges = edges;\n    this.setState({\n      graph,\n      selected: null,\n    });\n  };\n\n  onUndo = () => {\n    // Not implemented\n    console.warn('Undo is not currently implemented in the example.');\n    // Normally any add, remove, or update would record the action in an array.\n    // In order to undo it one would simply call the inverse of the action performed. For instance, if someone\n    // called onDeleteEdge with (viewEdge, i, edges) then an undelete would be a splicing the original viewEdge\n    // into the edges array at position i.\n  };\n\n  onCopySelected = () => {\n    if (this.state.selected.source) {\n      console.warn('Cannot copy selected edges, try selecting a node instead.');\n\n      return;\n    }\n\n    const x = this.state.selected.x + 10;\n    const y = this.state.selected.y + 10;\n\n    this.setState({\n      copiedNode: { ...this.state.selected, x, y },\n    });\n  };\n\n  onPasteSelected = () => {\n    if (!this.state.copiedNode) {\n      console.warn(\n        'No node is currently in the copy queue. Try selecting a node and copying it with Ctrl/Command-C'\n      );\n    }\n\n    const graph = this.state.graph;\n    const newNode = { ...this.state.copiedNode, id: Date.now() };\n\n    graph.nodes = [...graph.nodes, newNode];\n    this.forceUpdate();\n  };\n\n  handleChangeLayoutEngineType = (event: any) => {\n    this.setState({\n      layoutEngineType: (event.target.value: LayoutEngineType | 'None'),\n    });\n  };\n\n  onSelectPanNode = (event: any) => {\n    if (this.GraphView) {\n      this.GraphView.panToNode(event.target.value, true);\n    }\n  };\n\n  /*\n   * Render\n   */\n\n  render() {\n    const { nodes, edges } = this.state.graph;\n    const selected = this.state.selected;\n    const { NodeTypes, NodeSubtypes, EdgeTypes } = GraphConfig;\n    return (\n      <div id=\"graph\">\n        <div className=\"graph-header\">\n          <button onClick={this.deleteStartNode}>Delete Node</button>\n          <button onClick={this.expandMap}>Expand Map</button>\n          <p>Side 1 selected artist : {this.state.side1SelectedNode.title}</p>\n          <p>Side 2 selected artist : {this.state.side2SelectedNode.title}</p>\n          <div className=\"layout-engine\">\n            <span>Layout Engine:</span>\n            <select\n              name=\"layout-engine-type\"\n              onChange={this.handleChangeLayoutEngineType}\n            >\n              <option value={undefined}>None</option>\n              <option value={'SnapToGrid'}>Snap to Grid</option>\n              <option value={'VerticalTree'}>Vertical Tree</option>\n            </select>\n          </div>\n          <div className=\"pan-list\">\n            <span>Pan To:</span>\n            <select onChange={this.onSelectPanNode}>\n              {nodes.map(node => (\n                <option key={node[NODE_KEY]} value={node[NODE_KEY]}>\n                  {node.title}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <GraphView\n          ref={el => (this.GraphView = el)}\n          nodeKey={NODE_KEY}\n          nodes={nodes}\n          edges={edges}\n          selected={selected}\n          nodeTypes={NodeTypes}\n          nodeSubtypes={NodeSubtypes}\n          edgeTypes={EdgeTypes}\n          onSelectNode={this.onSelectNode}\n          onCreateNode={this.onCreateNode}\n          onUpdateNode={this.onUpdateNode}\n          onDeleteNode={this.onDeleteNode}\n          onSelectEdge={this.onSelectEdge}\n          onCreateEdge={this.onCreateEdge}\n          onSwapEdge={this.onSwapEdge}\n          onDeleteEdge={this.onDeleteEdge}\n          onUndo={this.onUndo}\n          onCopySelected={this.onCopySelected}\n          onPasteSelected={this.onPasteSelected}\n          layoutEngineType={this.state.layoutEngineType}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","import * as ReactDOM from 'react-dom';\nimport React from 'react';\nimport HomePage from './pages/homepage';\nimport Callback from './pages/callback';\nimport Map from './pages/map';\nimport Graph from './pages/graph';\n\n\n\n\n\nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\" >\n    <Route path = \"/\" component = {HomePage} exact />\n    <Route path = \"/callback\" component = {Callback} />\n    <Route path = \"/map\" component = {Map} />\n    <Route path = \"/graph\" component={Graph} />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}