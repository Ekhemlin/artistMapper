{
  "{\"sourceRoot\":\"/Users/eitankhemlin/Desktop/site/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eitankhemlin/Desktop/site/backend\",\"filename\":\"/Users/eitankhemlin/Desktop/site/backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eitankhemlin/Desktop/site/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eitankhemlin/Desktop/site/backend",
      "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/eitankhemlin/Desktop/site/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar queryString = require('query-string');\n\nvar request = require('request'); // \"Request\" library\n\n\nvar rp = require('request-promise');\n\nvar fetch = require('node-fetch');\n\nvar app = (0, _express[\"default\"])();\n\nvar Artist = function Artist(id, name, genres, popularity) {\n  _classCallCheck(this, Artist);\n\n  this.id = id;\n  this.name = name;\n  this.genres = genres;\n  this.popularity = popularity;\n};\n\napp.use(_bodyParser[\"default\"].json());\n\nfunction findArtist(_x, _x2) {\n  return _findArtist.apply(this, arguments);\n}\n\nfunction _findArtist() {\n  _findArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(artistName, token) {\n    var searchParams, artist;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            searchParams = {\n              'q': artistName,\n              'type': 'artist'\n            };\n            _context2.next = 3;\n            return fetch('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              //console.log(json);\n              var result = json['artists']['items'][0];\n              artist = new Artist(result['id'], result['name'], result['genres'], result['popularity']);\n            }) //.then(json => console.log(json['artists']['items'][0]['id']))\n            [\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", artist);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findArtist.apply(this, arguments);\n}\n\nfunction getRelatedArtist(_x3, _x4) {\n  return _getRelatedArtist.apply(this, arguments);\n} // TODO:  change naming to related artist 1 vs artist 2\n\n/* Takes the array of 20 related artists and returns the top <numAritsts>\ndetermined by their amount of shared genres. */\n\n\nfunction _getRelatedArtist() {\n  _getRelatedArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(artistID, token) {\n    var relatedArtistsArray;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            relatedArtistsArray = [];\n            _context3.next = 3;\n            return fetch(\"https://api.spotify.com/v1/artists/\".concat(artistID, \"/related-artists\"), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              var artists = json['artists']; //console.log(artists);\n\n              for (var index in artists) {\n                var artistJSON = artists[index];\n                var artist = new Artist(artistJSON['id'], artistJSON['name'], artistJSON['genres'], artistJSON['popularity']);\n                relatedArtistsArray.push(artist); // console.log(artist);\n              } //relatedArtistsArray = artists;\n\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 3:\n            return _context3.abrupt(\"return\", relatedArtistsArray);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getRelatedArtist.apply(this, arguments);\n}\n\nfunction sortTopRelatedArtists(artist, relatedArtists, numArtists) {\n  console.log(\"sorting related artists closest to \" + artist.name);\n\n  function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n\n    return a.filter(function (e) {\n      return b.indexOf(e) > -1;\n    });\n  }\n  /*let N be number of genres in artists\n  creates array of N empty arrays.\n  Array[index] holds the artists with <index> shared genres*/\n\n\n  var genres = artist.genres;\n  var numGenres = artist.genres.length;\n  var sortedArtists = [];\n\n  for (var i = 0; i < numGenres; i++) {\n    sortedArtists.push([]);\n  }\n\n  for (var index in relatedArtists) {\n    var related = relatedArtists[index];\n    var commonGenres = intersect(genres, related.genres).length;\n    sortedArtists[commonGenres].push(related);\n  }\n\n  var returnArray = [];\n\n  for (var i = numGenres - 1; i >= 0; i--) {\n    var subArray = sortedArtists[i];\n\n    for (var j = 0; j < subArray.length; j++) {\n      if (returnArray.length == numArtists) {\n        return returnArray;\n      }\n\n      ;\n      returnArray.push(subArray[j]);\n      console.log(subArray[j]);\n    }\n  }\n}\n\napp.get('/hello', function (req, res) {\n  return res.send('Hello!');\n});\napp.post('/fetchArtistMap', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var numArtists, artist1, relatedArtists1, artist2, relatedArtists2, sortedRelatedArtist1, sortedRelatedArtist2;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            numArtists = req.body.numRelated;\n            _context.next = 3;\n            return findArtist(req.body.artist1, req.body.token);\n\n          case 3:\n            artist1 = _context.sent;\n            _context.next = 6;\n            return getRelatedArtist(artist1.id, req.body.token);\n\n          case 6:\n            relatedArtists1 = _context.sent;\n            _context.next = 9;\n            return findArtist(req.body.artist2, req.body.token);\n\n          case 9:\n            artist2 = _context.sent;\n            _context.next = 12;\n            return getRelatedArtist(artist2.id, req.body.token);\n\n          case 12:\n            relatedArtists2 = _context.sent;\n            sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, 5);\n            sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, 5);\n            res.send({\n              \"artist1\": artist1,\n              \"related1\": sortedRelatedArtist1,\n              \"artist2\": artist2,\n              \"related2\": sortedRelatedArtist2\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(8000, function () {\n  return console.log(\"listening on 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "queryString",
        "require",
        "request",
        "rp",
        "fetch",
        "app",
        "Artist",
        "id",
        "name",
        "genres",
        "popularity",
        "use",
        "bodyParser",
        "json",
        "findArtist",
        "artistName",
        "token",
        "searchParams",
        "stringify",
        "method",
        "headers",
        "then",
        "res",
        "result",
        "artist",
        "err",
        "console",
        "error",
        "getRelatedArtist",
        "artistID",
        "relatedArtistsArray",
        "artists",
        "index",
        "artistJSON",
        "push",
        "sortTopRelatedArtists",
        "relatedArtists",
        "numArtists",
        "log",
        "intersect",
        "a",
        "b",
        "t",
        "length",
        "filter",
        "e",
        "indexOf",
        "numGenres",
        "sortedArtists",
        "i",
        "related",
        "commonGenres",
        "returnArray",
        "subArray",
        "j",
        "get",
        "req",
        "send",
        "post",
        "body",
        "numRelated",
        "artist1",
        "relatedArtists1",
        "artist2",
        "relatedArtists2",
        "sortedRelatedArtist1",
        "sortedRelatedArtist2",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser'\nconst queryString = require('query-string');\nvar request = require('request'); // \"Request\" library\nvar rp = require('request-promise');\nconst fetch = require('node-fetch');\n\nconst app = express();\n\nclass Artist{\n  constructor(id, name, genres, popularity){\n    this.id = id;\n    this.name = name;\n    this.genres = genres;\n    this.popularity = popularity;\n  }\n}\n\n\n\n\napp.use(bodyParser.json())\n\n\nasync function findArtist(artistName, token){\n const searchParams = {'q' : artistName, 'type' : 'artist'};\n\n var artist;\n await fetch(('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams)), {\n        method: 'get',\n        headers: { 'Authorization': 'Bearer ' + token },\n    })\n    .then(res => res.json())\n    .then(function(json){\n      //console.log(json);\n      const result = json['artists']['items'][0];\n      artist = new Artist(result['id'],result['name'], result['genres'], result['popularity']);\n    })\n    //.then(json => console.log(json['artists']['items'][0]['id']))\n    .catch(err => console.error(err))\n    return artist;\n}\n\nasync function getRelatedArtist(artistID, token){\n  var relatedArtistsArray = [];\n  await fetch(`https://api.spotify.com/v1/artists/${artistID}/related-artists`, {\n         method: 'get',\n         headers: { 'Authorization': 'Bearer ' + token },\n     })\n     .then(res => res.json())\n     .then(function(json){\n       const artists = json['artists'];\n      //console.log(artists);\n     for(var index in artists){\n       const artistJSON = artists[index];\n       var artist = new Artist(artistJSON['id'],artistJSON['name'], artistJSON['genres'], artistJSON['popularity']);\n       relatedArtistsArray.push(artist);\n      // console.log(artist);\n     }\n      //relatedArtistsArray = artists;\n     })\n     .catch(err => console.error(err))\n     return relatedArtistsArray;\n}\n\n\n// TODO:  change naming to related artist 1 vs artist 2\n\n/* Takes the array of 20 related artists and returns the top <numAritsts>\ndetermined by their amount of shared genres. */\nfunction sortTopRelatedArtists(artist, relatedArtists, numArtists){\n  console.log(\"sorting related artists closest to \" + artist.name);\n\n  function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function (e) {\n        return b.indexOf(e) > -1;\n    });\n  }\n\n  /*let N be number of genres in artists\n  creates array of N empty arrays.\n  Array[index] holds the artists with <index> shared genres*/\n  const genres = artist.genres;\n  const numGenres = artist.genres.length;\n\n  var sortedArtists = [];\n\n  for(var i=0; i<numGenres; i++){\n    sortedArtists.push([]);\n  }\n  for(var index in relatedArtists){\n    const related = relatedArtists[index];\n    const commonGenres = intersect(genres, related.genres).length;\n    sortedArtists[commonGenres].push(related);\n  }\n\n  var returnArray = [];\n  for(var i=numGenres-1; i>=0; i--){\n\n    var subArray = sortedArtists[i];\n    for(var j=0; j<subArray.length; j++){\n      if(returnArray.length==numArtists){return(returnArray)};\n      returnArray.push(subArray[j]);\n      console.log(subArray[j]);\n    }\n  }\n\n\n\n}\n\n\n\n\napp.get('/hello', (req, res) => res.send('Hello!'));\n\n\napp.post('/fetchArtistMap', async function(req, res){\n\n  const numArtists = req.body.numRelated;\n\n  const artist1 = await findArtist(req.body.artist1, req.body.token);\n  const relatedArtists1 = await getRelatedArtist(artist1.id, req.body.token);\n\n  const artist2 = await findArtist(req.body.artist2, req.body.token);\n  const relatedArtists2 = await getRelatedArtist(artist2.id, req.body.token);\n\n  const sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, 5);\n  const sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, 5);\n\n  res.send({\"artist1\": artist1, \"related1\" : sortedRelatedArtist1, \"artist2\" : artist2, \"related2\": sortedRelatedArtist2});\n\n\n});\n\n\n\n\n\n\napp.listen(8000, ()=> console.log(\"listening on 8000\"));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1588439200161
  }
}