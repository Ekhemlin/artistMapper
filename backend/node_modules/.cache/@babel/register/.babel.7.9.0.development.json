{
  "{\"sourceRoot\":\"/Users/eitankhemlin/Desktop/site/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eitankhemlin/Desktop/site/backend\",\"filename\":\"/Users/eitankhemlin/Desktop/site/backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eitankhemlin/Desktop/site/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eitankhemlin/Desktop/site/backend",
      "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/eitankhemlin/Desktop/site/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar queryString = require('query-string');\n\nvar request = require('request'); // \"Request\" library\n\n\nvar rp = require('request-promise');\n\nvar fetch = require('node-fetch');\n\nvar app = (0, _express[\"default\"])();\n\nvar Artist = function Artist(id, name, genres, popularity) {\n  _classCallCheck(this, Artist);\n\n  this.id = id;\n  this.name = name;\n  this.genres = genres;\n  this.popularity = popularity;\n};\n\napp.use(_bodyParser[\"default\"].json());\n\nfunction findArtist(_x, _x2) {\n  return _findArtist.apply(this, arguments);\n}\n\nfunction _findArtist() {\n  _findArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(artistName, token) {\n    var searchParams, artist;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            searchParams = {\n              'q': artistName,\n              'type': 'artist'\n            };\n            _context2.next = 3;\n            return fetch('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              var result = json['artists']['items'][0];\n              artist = new Artist(result['id'], result['name'], result['genres'], result['popularity']);\n            }) //.then(json => console.log(json['artists']['items'][0]['id']))\n            [\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", artist);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findArtist.apply(this, arguments);\n}\n\nfunction getRelatedArtist(_x3, _x4) {\n  return _getRelatedArtist.apply(this, arguments);\n}\n\nfunction _getRelatedArtist() {\n  _getRelatedArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(artistID, token) {\n    var retJSON;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"https://api.spotify.com/v1/artists/\".concat(artistID, \"/related-artists\"), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              console.log(json['artists']);\n              retJSON = json['artists'];\n            }) //.then(json => console.log(json['artists']['items'][0]['id']))\n            [\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 2:\n            return _context3.abrupt(\"return\", retJSON);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getRelatedArtist.apply(this, arguments);\n}\n\napp.get('/hello', function (req, res) {\n  return res.send('Hello!');\n});\napp.post('/fetchArtistMap', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var artist1, relatedArtist1, artist2, relatedArtist2;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return findArtist(req.body.artist1, req.body.token);\n\n          case 2:\n            artist1 = _context.sent;\n            _context.next = 5;\n            return getRelatedArtist(artist1.id, req.body.token);\n\n          case 5:\n            relatedArtist1 = _context.sent;\n            _context.next = 8;\n            return findArtist(req.body.artist2, req.body.token);\n\n          case 8:\n            artist2 = _context.sent;\n            _context.next = 11;\n            return getRelatedArtist(artist2.id, req.body.token);\n\n          case 11:\n            relatedArtist2 = _context.sent;\n            console.log(JSON.stringify(artist2));\n            res.send({\n              \"artist1ID\": artist1.id,\n              \"artist2ID\": artist1.name\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(8000, function () {\n  return console.log(\"listening on 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJxdWVyeVN0cmluZyIsInJlcXVpcmUiLCJyZXF1ZXN0IiwicnAiLCJmZXRjaCIsImFwcCIsIkFydGlzdCIsImlkIiwibmFtZSIsImdlbnJlcyIsInBvcHVsYXJpdHkiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsImZpbmRBcnRpc3QiLCJhcnRpc3ROYW1lIiwidG9rZW4iLCJzZWFyY2hQYXJhbXMiLCJzdHJpbmdpZnkiLCJtZXRob2QiLCJoZWFkZXJzIiwidGhlbiIsInJlcyIsInJlc3VsdCIsImFydGlzdCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImdldFJlbGF0ZWRBcnRpc3QiLCJhcnRpc3RJRCIsImxvZyIsInJldEpTT04iLCJnZXQiLCJyZXEiLCJzZW5kIiwicG9zdCIsImJvZHkiLCJhcnRpc3QxIiwicmVsYXRlZEFydGlzdDEiLCJhcnRpc3QyIiwicmVsYXRlZEFydGlzdDIiLCJKU09OIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBQ0EsSUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUEzQjs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELE9BQU8sQ0FBQyxTQUFELENBQXJCLEMsQ0FBa0M7OztBQUNsQyxJQUFJRSxFQUFFLEdBQUdGLE9BQU8sQ0FBQyxpQkFBRCxDQUFoQjs7QUFDQSxJQUFNRyxLQUFLLEdBQUdILE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUVBLElBQU1JLEdBQUcsR0FBRywwQkFBWjs7SUFFTUMsTSxHQUNKLGdCQUFZQyxFQUFaLEVBQWdCQyxJQUFoQixFQUFzQkMsTUFBdEIsRUFBOEJDLFVBQTlCLEVBQXlDO0FBQUE7O0FBQ3ZDLE9BQUtILEVBQUwsR0FBVUEsRUFBVjtBQUNBLE9BQUtDLElBQUwsR0FBWUEsSUFBWjtBQUNBLE9BQUtDLE1BQUwsR0FBY0EsTUFBZDtBQUNBLE9BQUtDLFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0QsQzs7QUFN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LENBQUNHLElBQUosQ0FBU3BCLEtBQXRCLENBRm5COztBQUFBO0FBRXBCc0IsWUFBQUEsY0FGb0I7QUFBQTtBQUFBLG1CQUlKeEIsVUFBVSxDQUFDbUIsR0FBRyxDQUFDRyxJQUFKLENBQVNHLE9BQVYsRUFBbUJOLEdBQUcsQ0FBQ0csSUFBSixDQUFTcEIsS0FBNUIsQ0FKTjs7QUFBQTtBQUlwQnVCLFlBQUFBLE9BSm9CO0FBQUE7QUFBQSxtQkFLR1gsZ0JBQWdCLENBQUNXLE9BQU8sQ0FBQ2hDLEVBQVQsRUFBYTBCLEdBQUcsQ0FBQ0csSUFBSixDQUFTcEIsS0FBdEIsQ0FMbkI7O0FBQUE7QUFLcEJ3QixZQUFBQSxjQUxvQjtBQU8xQmQsWUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVlXLElBQUksQ0FBQ3ZCLFNBQUwsQ0FBZXFCLE9BQWYsQ0FBWjtBQUdBakIsWUFBQUEsR0FBRyxDQUFDWSxJQUFKLENBQVM7QUFBQywyQkFBY0csT0FBTyxDQUFDOUIsRUFBdkI7QUFDUCwyQkFBYzhCLE9BQU8sQ0FBQzdCO0FBRGYsYUFBVDs7QUFWMEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBNUI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFtQkFILEdBQUcsQ0FBQ3FDLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBS2hCLE9BQU8sQ0FBQ0ksR0FBUixDQUFZLG1CQUFaLENBQUw7QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZWl0YW5raGVtbGluL0Rlc2t0b3Avc2l0ZS9iYWNrZW5kL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuY29uc3QgcXVlcnlTdHJpbmcgPSByZXF1aXJlKCdxdWVyeS1zdHJpbmcnKTtcbnZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdCcpOyAvLyBcIlJlcXVlc3RcIiBsaWJyYXJ5XG52YXIgcnAgPSByZXF1aXJlKCdyZXF1ZXN0LXByb21pc2UnKTtcbmNvbnN0IGZldGNoID0gcmVxdWlyZSgnbm9kZS1mZXRjaCcpO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmNsYXNzIEFydGlzdHtcbiAgY29uc3RydWN0b3IoaWQsIG5hbWUsIGdlbnJlcywgcG9wdWxhcml0eSl7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5nZW5yZXMgPSBnZW5yZXM7XG4gICAgdGhpcy5wb3B1bGFyaXR5ID0gcG9wdWxhcml0eTtcbiAgfVxufVxuXG5cblxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuXG5cbmFzeW5jIGZ1bmN0aW9uIGZpbmRBcnRpc3QoYXJ0aXN0TmFtZSwgdG9rZW4pe1xuIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHsncScgOiBhcnRpc3ROYW1lLCAndHlwZScgOiAnYXJ0aXN0J307XG5cbiB2YXIgYXJ0aXN0O1xuIGF3YWl0IGZldGNoKCgnaHR0cHM6Ly9hcGkuc3BvdGlmeS5jb20vdjEvc2VhcmNoPycgKyBxdWVyeVN0cmluZy5zdHJpbmdpZnkoc2VhcmNoUGFyYW1zKSksIHtcbiAgICAgICAgbWV0aG9kOiAnZ2V0JyxcbiAgICAgICAgaGVhZGVyczogeyAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuIH0sXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAudGhlbihmdW5jdGlvbihqc29uKXtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGpzb25bJ2FydGlzdHMnXVsnaXRlbXMnXVswXTtcbiAgICAgIGFydGlzdCA9IG5ldyBBcnRpc3QocmVzdWx0WydpZCddLHJlc3VsdFsnbmFtZSddLCByZXN1bHRbJ2dlbnJlcyddLCByZXN1bHRbJ3BvcHVsYXJpdHknXSk7XG4gICAgfSlcbiAgICAvLy50aGVuKGpzb24gPT4gY29uc29sZS5sb2coanNvblsnYXJ0aXN0cyddWydpdGVtcyddWzBdWydpZCddKSlcbiAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICByZXR1cm4gYXJ0aXN0O1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRSZWxhdGVkQXJ0aXN0KGFydGlzdElELCB0b2tlbil7XG4gIHZhciByZXRKU09OO1xuICBhd2FpdCBmZXRjaChgaHR0cHM6Ly9hcGkuc3BvdGlmeS5jb20vdjEvYXJ0aXN0cy8ke2FydGlzdElEfS9yZWxhdGVkLWFydGlzdHNgLCB7XG4gICAgICAgICBtZXRob2Q6ICdnZXQnLFxuICAgICAgICAgaGVhZGVyczogeyAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIHRva2VuIH0sXG4gICAgIH0pXG4gICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxuICAgICAudGhlbihmdW5jdGlvbihqc29uKXtcbiAgICAgICBjb25zb2xlLmxvZyhqc29uWydhcnRpc3RzJ10pO1xuICAgICAgIHJldEpTT04gPSBqc29uWydhcnRpc3RzJ107XG4gICAgIH0pXG4gICAgIC8vLnRoZW4oanNvbiA9PiBjb25zb2xlLmxvZyhqc29uWydhcnRpc3RzJ11bJ2l0ZW1zJ11bMF1bJ2lkJ10pKVxuICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUuZXJyb3IoZXJyKSlcbiAgICAgcmV0dXJuIHJldEpTT047XG59XG5cblxuXG5hcHAuZ2V0KCcvaGVsbG8nLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKCdIZWxsbyEnKSk7XG5cblxuYXBwLnBvc3QoJy9mZXRjaEFydGlzdE1hcCcsIGFzeW5jIGZ1bmN0aW9uKHJlcSwgcmVzKXtcbiAgY29uc3QgYXJ0aXN0MSA9IGF3YWl0IGZpbmRBcnRpc3QocmVxLmJvZHkuYXJ0aXN0MSwgcmVxLmJvZHkudG9rZW4pO1xuICBjb25zdCByZWxhdGVkQXJ0aXN0MSA9IGF3YWl0IGdldFJlbGF0ZWRBcnRpc3QoYXJ0aXN0MS5pZCwgcmVxLmJvZHkudG9rZW4pO1xuXG4gIGNvbnN0IGFydGlzdDIgPSBhd2FpdCBmaW5kQXJ0aXN0KHJlcS5ib2R5LmFydGlzdDIsIHJlcS5ib2R5LnRva2VuKTtcbiAgY29uc3QgcmVsYXRlZEFydGlzdDIgPSBhd2FpdCBnZXRSZWxhdGVkQXJ0aXN0KGFydGlzdDIuaWQsIHJlcS5ib2R5LnRva2VuKTtcblxuICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShhcnRpc3QyKSk7XG5cblxuICByZXMuc2VuZCh7XCJhcnRpc3QxSURcIiA6IGFydGlzdDEuaWQsXG4gICAgXCJhcnRpc3QySURcIiA6IGFydGlzdDEubmFtZX0pO1xufSk7XG5cblxuXG5cblxuXG5hcHAubGlzdGVuKDgwMDAsICgpPT4gY29uc29sZS5sb2coXCJsaXN0ZW5pbmcgb24gODAwMFwiKSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "queryString",
        "require",
        "request",
        "rp",
        "fetch",
        "app",
        "Artist",
        "id",
        "name",
        "genres",
        "popularity",
        "use",
        "bodyParser",
        "json",
        "findArtist",
        "artistName",
        "token",
        "searchParams",
        "stringify",
        "method",
        "headers",
        "then",
        "res",
        "result",
        "artist",
        "err",
        "console",
        "error",
        "getRelatedArtist",
        "artistID",
        "log",
        "retJSON",
        "get",
        "req",
        "send",
        "post",
        "body",
        "artist1",
        "relatedArtist1",
        "artist2",
        "relatedArtist2",
        "JSON",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser'\nconst queryString = require('query-string');\nvar request = require('request'); // \"Request\" library\nvar rp = require('request-promise');\nconst fetch = require('node-fetch');\n\nconst app = express();\n\nclass Artist{\n  constructor(id, name, genres, popularity){\n    this.id = id;\n    this.name = name;\n    this.genres = genres;\n    this.popularity = popularity;\n  }\n}\n\n\n\n\napp.use(bodyParser.json())\n\n\nasync function findArtist(artistName, token){\n const searchParams = {'q' : artistName, 'type' : 'artist'};\n\n var artist;\n await fetch(('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams)), {\n        method: 'get',\n        headers: { 'Authorization': 'Bearer ' + token },\n    })\n    .then(res => res.json())\n    .then(function(json){\n      const result = json['artists']['items'][0];\n      artist = new Artist(result['id'],result['name'], result['genres'], result['popularity']);\n    })\n    //.then(json => console.log(json['artists']['items'][0]['id']))\n    .catch(err => console.error(err))\n    return artist;\n}\n\nasync function getRelatedArtist(artistID, token){\n  var retJSON;\n  await fetch(`https://api.spotify.com/v1/artists/${artistID}/related-artists`, {\n         method: 'get',\n         headers: { 'Authorization': 'Bearer ' + token },\n     })\n     .then(res => res.json())\n     .then(function(json){\n       console.log(json['artists']);\n       retJSON = json['artists'];\n     })\n     //.then(json => console.log(json['artists']['items'][0]['id']))\n     .catch(err => console.error(err))\n     return retJSON;\n}\n\n\n\napp.get('/hello', (req, res) => res.send('Hello!'));\n\n\napp.post('/fetchArtistMap', async function(req, res){\n  const artist1 = await findArtist(req.body.artist1, req.body.token);\n  const relatedArtist1 = await getRelatedArtist(artist1.id, req.body.token);\n\n  const artist2 = await findArtist(req.body.artist2, req.body.token);\n  const relatedArtist2 = await getRelatedArtist(artist2.id, req.body.token);\n\n  console.log(JSON.stringify(artist2));\n\n\n  res.send({\"artist1ID\" : artist1.id,\n    \"artist2ID\" : artist1.name});\n});\n\n\n\n\n\n\napp.listen(8000, ()=> console.log(\"listening on 8000\"));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1587943100907
  }
}