{
  "{\"sourceRoot\":\"/Users/eitankhemlin/Desktop/site/backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/eitankhemlin/Desktop/site/backend\",\"filename\":\"/Users/eitankhemlin/Desktop/site/backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/eitankhemlin/Desktop/site/backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/eitankhemlin/Desktop/site/backend",
      "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/eitankhemlin/Desktop/site/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/eitankhemlin/Desktop/site/backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar queryString = require('query-string');\n\nvar request = require('request'); // \"Request\" library\n\n\nvar rp = require('request-promise');\n\nvar fetch = require('node-fetch');\n\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, '/build')));\n\nvar Artist = function Artist(id, name, genres, popularity) {\n  _classCallCheck(this, Artist);\n\n  this.id = id;\n  this.name = name;\n  this.genres = genres;\n  this.popularity = popularity;\n  this.genresInCommon = 0;\n};\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\n\nfunction retrieveRelatedArtists(_x) {\n  return _retrieveRelatedArtists.apply(this, arguments);\n}\n\nfunction _retrieveRelatedArtists() {\n  _retrieveRelatedArtists = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(artistID) {\n    var client, db, artist;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 2:\n            client = _context3.sent;\n            db = client.db('artistStorage');\n            _context3.next = 6;\n            return db.collection(\"relatedArtists\").findOne({\n              \"relatedTo\": artistID\n            });\n\n          case 6:\n            artist = _context3.sent;\n            client.close();\n            return _context3.abrupt(\"return\", artist);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _retrieveRelatedArtists.apply(this, arguments);\n}\n\nfunction saveRelatedArtists(_x2, _x3) {\n  return _saveRelatedArtists.apply(this, arguments);\n}\n\nfunction _saveRelatedArtists() {\n  _saveRelatedArtists = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(artistID, artistArray) {\n    var client, db, artist;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _mongodb.MongoClient.connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 2:\n            client = _context4.sent;\n            db = client.db('artistStorage');\n            _context4.next = 6;\n            return db.collection('relatedArtists').insertOne({\n              relatedTo: artistID,\n              relatedArray: artistArray\n            });\n\n          case 6:\n            artist = _context4.sent;\n            client.close();\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _saveRelatedArtists.apply(this, arguments);\n}\n\nfunction getArtistFromID(_x4, _x5) {\n  return _getArtistFromID.apply(this, arguments);\n}\n\nfunction _getArtistFromID() {\n  _getArtistFromID = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(artistID, token) {\n    var artist;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"https://api.spotify.com/v1/artists/\".concat(artistID), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              //console.log(json);\n              artist = new Artist(artistID, json['name'], json['genres'], json['popularity']);\n            }) //.then(json => console.log(json['artists']['items'][0]['id']))\n            [\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 2:\n            return _context5.abrupt(\"return\", artist);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getArtistFromID.apply(this, arguments);\n}\n\nfunction findArtist(_x6, _x7) {\n  return _findArtist.apply(this, arguments);\n}\n\nfunction _findArtist() {\n  _findArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(artistName, token) {\n    var searchParams, artist;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            searchParams = {\n              'q': artistName,\n              'type': 'artist'\n            };\n            _context6.next = 3;\n            return fetch('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              //console.log(json);\n              var result = json['artists']['items'][0];\n              artist = new Artist(result['id'], result['name'], result['genres'], result['popularity']);\n            }) //.then(json => console.log(json['artists']['items'][0]['id']))\n            [\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 3:\n            return _context6.abrupt(\"return\", artist);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _findArtist.apply(this, arguments);\n}\n\nfunction getRelatedArtist(_x8, _x9) {\n  return _getRelatedArtist.apply(this, arguments);\n} // TODO:  change naming to related artist 1 vs artist 2\n\n/* Takes the array of 20 related artists and returns the top <numAritsts>\ndetermined by their amount of shared genres. */\n\n\nfunction _getRelatedArtist() {\n  _getRelatedArtist = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(artistID, token) {\n    var dbEntry, relatedArtistsArray;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return retrieveRelatedArtists(artistID);\n\n          case 2:\n            dbEntry = _context7.sent;\n\n            if (!(dbEntry == null)) {\n              _context7.next = 11;\n              break;\n            }\n\n            // console.log(\"USING API\");\n            relatedArtistsArray = [];\n            _context7.next = 7;\n            return fetch(\"https://api.spotify.com/v1/artists/\".concat(artistID, \"/related-artists\"), {\n              method: 'get',\n              headers: {\n                'Authorization': 'Bearer ' + token\n              }\n            }).then(function (res) {\n              return res.json();\n            }).then(function (json) {\n              var artists = json['artists']; //console.log(artists);\n\n              for (var index in artists) {\n                var artistJSON = artists[index];\n                var artist = new Artist(artistJSON['id'], artistJSON['name'], artistJSON['genres'], artistJSON['popularity']);\n                relatedArtistsArray.push(artist); // console.log(artist);\n              }\n            })[\"catch\"](function (err) {\n              return console.error(err);\n            });\n\n          case 7:\n            saveRelatedArtists(artistID, relatedArtistsArray);\n            return _context7.abrupt(\"return\", relatedArtistsArray);\n\n          case 11:\n            return _context7.abrupt(\"return\", dbEntry.relatedArray);\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getRelatedArtist.apply(this, arguments);\n}\n\nfunction sortTopRelatedArtists(artist, relatedArtists, numArtists) {\n  console.log(\"sorting related artists closest to \" + artist.name);\n\n  function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n\n    return a.filter(function (e) {\n      return b.indexOf(e) > -1;\n    });\n  }\n  /*let N be number of genres in artists\n  creates array of N empty arrays.\n  Array[index] holds the artists with <index> shared genres*/\n\n\n  var genres = artist.genres;\n  var numGenres = artist.genres.length;\n  var sortedArtists = [];\n\n  for (var i = 0; i < numGenres; i++) {\n    sortedArtists.push([]);\n  }\n\n  for (var index in relatedArtists) {\n    var related = relatedArtists[index];\n    var commonGenres = intersect(genres, related.genres).length;\n    related.genresInCommon = commonGenres;\n\n    try {\n      sortedArtists[commonGenres].push(related);\n    } catch (error) {\n      sortedArtists[commonGenres] = [related];\n    }\n  }\n\n  var returnArray = [];\n\n  for (var i = numGenres - 1; i >= 0; i--) {\n    var subArray = sortedArtists[i];\n\n    for (var j = 0; j < subArray.length; j++) {\n      if (returnArray.length == numArtists) {\n        return returnArray;\n      }\n\n      ;\n      returnArray.push(subArray[j]); //console.log(subArray[j]);\n    }\n  }\n}\n\napp.get('/hello', function (req, res) {\n  console.log(\"HELLO\");\n  res.send(\"HELLO!\");\n});\napp.post('/fetchArtistMap', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var numArtists, artist1, relatedArtists1, artist2, relatedArtists2, sortedRelatedArtist1, sortedRelatedArtist2, retJSON;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            numArtists = req.body.numRelated;\n            _context.next = 3;\n            return findArtist(req.body.artist1, req.body.token);\n\n          case 3:\n            artist1 = _context.sent;\n            _context.next = 6;\n            return getRelatedArtist(artist1.id, req.body.token);\n\n          case 6:\n            relatedArtists1 = _context.sent;\n            _context.next = 9;\n            return findArtist(req.body.artist2, req.body.token);\n\n          case 9:\n            artist2 = _context.sent;\n            _context.next = 12;\n            return getRelatedArtist(artist2.id, req.body.token);\n\n          case 12:\n            relatedArtists2 = _context.sent;\n            sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, numArtists);\n            sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, numArtists);\n            retJSON = {\n              \"artist1\": artist1,\n              \"related1\": sortedRelatedArtist1,\n              \"artist2\": artist2,\n              \"related2\": sortedRelatedArtist2\n            };\n            console.log(retJSON);\n            res.send(retJSON);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x10, _x11) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/expandArtistMap', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var numArtists, artist1ID, artist1, relatedArtists1, artist2ID, artist2, relatedArtists2, sortedRelatedArtist1, sortedRelatedArtist2, retJSON;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            numArtists = req.body.numRelated;\n            artist1ID = req.body.artist1ID;\n            _context2.next = 4;\n            return getArtistFromID(artist1ID, req.body.token);\n\n          case 4:\n            artist1 = _context2.sent;\n            _context2.next = 7;\n            return getRelatedArtist(artist1ID, req.body.token);\n\n          case 7:\n            relatedArtists1 = _context2.sent;\n            artist2ID = req.body.artist2ID;\n            _context2.next = 11;\n            return getArtistFromID(artist2ID, req.body.token);\n\n          case 11:\n            artist2 = _context2.sent;\n            _context2.next = 14;\n            return getRelatedArtist(artist2ID, req.body.token);\n\n          case 14:\n            relatedArtists2 = _context2.sent;\n            sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, numArtists * 2);\n            sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, numArtists * 2);\n            retJSON = {\n              \"related1\": sortedRelatedArtist1,\n              \"related2\": sortedRelatedArtist2\n            };\n            console.log(retJSON);\n            res.send(retJSON);\n\n          case 20:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x12, _x13) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('*', function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname + 'build/index.html'));\n});\napp.listen(8000, function () {\n  return console.log(\"listening on 8000\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "queryString",
        "require",
        "request",
        "rp",
        "fetch",
        "app",
        "use",
        "express",
        "path",
        "join",
        "__dirname",
        "Artist",
        "id",
        "name",
        "genres",
        "popularity",
        "genresInCommon",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "retrieveRelatedArtists",
        "artistID",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "collection",
        "findOne",
        "artist",
        "close",
        "saveRelatedArtists",
        "artistArray",
        "insertOne",
        "relatedTo",
        "relatedArray",
        "getArtistFromID",
        "token",
        "method",
        "headers",
        "then",
        "res",
        "err",
        "console",
        "error",
        "findArtist",
        "artistName",
        "searchParams",
        "stringify",
        "result",
        "getRelatedArtist",
        "dbEntry",
        "relatedArtistsArray",
        "artists",
        "index",
        "artistJSON",
        "push",
        "sortTopRelatedArtists",
        "relatedArtists",
        "numArtists",
        "log",
        "intersect",
        "a",
        "b",
        "t",
        "length",
        "filter",
        "e",
        "indexOf",
        "numGenres",
        "sortedArtists",
        "i",
        "related",
        "commonGenres",
        "returnArray",
        "subArray",
        "j",
        "get",
        "req",
        "send",
        "post",
        "body",
        "numRelated",
        "artist1",
        "relatedArtists1",
        "artist2",
        "relatedArtists2",
        "sortedRelatedArtist1",
        "sortedRelatedArtist2",
        "retJSON",
        "artist1ID",
        "artist2ID",
        "sendFile",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/eitankhemlin/Desktop/site/backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser'\nconst queryString = require('query-string');\nvar request = require('request'); // \"Request\" library\nvar rp = require('request-promise');\nconst fetch = require('node-fetch');\nimport {MongoClient} from 'mongodb';\nimport path from 'path';\n\nconst app = express();\napp.use(express.static(path.join(__dirname, '/build')));\n\nclass Artist{\n  constructor(id, name, genres, popularity){\n    this.id = id;\n    this.name = name;\n    this.genres = genres;\n    this.popularity = popularity;\n    this.genresInCommon = 0;\n  }\n}\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\n\nasync function retrieveRelatedArtists(artistID){\n  const client = await MongoClient.connect(`mongodb://localhost:27017`, {useNewUrlParser : true});\n  const db = client.db('artistStorage');\n  const artist = await db.collection(\"relatedArtists\").findOne({\"relatedTo\": artistID});\n  client.close();\n  return artist;\n}\n\nasync function saveRelatedArtists(artistID, artistArray){\n  const client = await MongoClient.connect(`mongodb://localhost:27017`, {useNewUrlParser : true});\n  const db = client.db('artistStorage');\n  const artist = await db.collection('relatedArtists').insertOne({relatedTo: artistID, relatedArray : artistArray});\n  client.close()\n}\n\n\nasync function getArtistFromID(artistID, token){\n var artist;\n await fetch(`https://api.spotify.com/v1/artists/${artistID}`,{\n        method: 'get',\n        headers: { 'Authorization': 'Bearer ' + token },\n    })\n    .then(res => res.json())\n    .then(function(json){\n      //console.log(json);\n      artist = new Artist(artistID,json['name'], json['genres'], json['popularity']);\n    })\n    //.then(json => console.log(json['artists']['items'][0]['id']))\n    .catch(err => console.error(err))\n    return artist;\n}\n\n\n\nasync function findArtist(artistName, token){\n const searchParams = {'q' : artistName, 'type' : 'artist'};\n\n var artist;\n await fetch(('https://api.spotify.com/v1/search?' + queryString.stringify(searchParams)), {\n        method: 'get',\n        headers: { 'Authorization': 'Bearer ' + token },\n    })\n    .then(res => res.json())\n    .then(function(json){\n      //console.log(json);\n      const result = json['artists']['items'][0];\n      artist = new Artist(result['id'],result['name'], result['genres'], result['popularity']);\n    })\n    //.then(json => console.log(json['artists']['items'][0]['id']))\n    .catch(err => console.error(err))\n    return artist;\n}\n\nasync function getRelatedArtist(artistID, token){\n\n  const dbEntry = await retrieveRelatedArtists(artistID);\n\n  if(dbEntry==null){\n    // console.log(\"USING API\");\n    var relatedArtistsArray = [];\n    await fetch(`https://api.spotify.com/v1/artists/${artistID}/related-artists`, {\n           method: 'get',\n           headers: { 'Authorization': 'Bearer ' + token },\n       })\n       .then(res => res.json())\n       .then(function(json){\n         const artists = json['artists'];\n        //console.log(artists);\n       for(var index in artists){\n         const artistJSON = artists[index];\n         var artist = new Artist(artistJSON['id'],artistJSON['name'], artistJSON['genres'], artistJSON['popularity']);\n         relatedArtistsArray.push(artist);\n        // console.log(artist);\n       }\n\n\n       })\n       .catch(err => console.error(err))\n       saveRelatedArtists(artistID, relatedArtistsArray);\n       return relatedArtistsArray;\n    }\n    else{\n      // console.log(\"DATABASE ENTRY\");\n      return dbEntry.relatedArray;\n    }\n}\n\n\n// TODO:  change naming to related artist 1 vs artist 2\n\n/* Takes the array of 20 related artists and returns the top <numAritsts>\ndetermined by their amount of shared genres. */\nfunction sortTopRelatedArtists(artist, relatedArtists, numArtists){\n  console.log(\"sorting related artists closest to \" + artist.name);\n\n\n\n\n  function intersect(a, b) {\n    var t;\n    if (b.length > a.length) t = b, b = a, a = t; // indexOf to loop over shorter\n    return a.filter(function (e) {\n        return b.indexOf(e) > -1;\n    });\n  }\n\n  /*let N be number of genres in artists\n  creates array of N empty arrays.\n  Array[index] holds the artists with <index> shared genres*/\n  const genres = artist.genres;\n  const numGenres = artist.genres.length;\n\n  var sortedArtists = [];\n\n  for(var i=0; i<numGenres; i++){\n    sortedArtists.push([]);\n  }\n  for(var index in relatedArtists){\n    const related = relatedArtists[index];\n    const commonGenres = intersect(genres, related.genres).length;\n    related.genresInCommon = commonGenres;\n    try{\n      sortedArtists[commonGenres].push(related);\n    }\n    catch(error){\n      sortedArtists[commonGenres] = [related];\n    }\n  }\n\n  var returnArray = [];\n  for(var i=numGenres-1; i>=0; i--){\n\n    var subArray = sortedArtists[i];\n    for(var j=0; j<subArray.length; j++){\n      if(returnArray.length==numArtists){return(returnArray)};\n      returnArray.push(subArray[j]);\n      //console.log(subArray[j]);\n    }\n  }\n\n\n\n}\n\n\napp.get('/hello', function(req, res){\n    console.log(\"HELLO\");\n    res.send(\"HELLO!\")\n});\n\n\napp.post('/fetchArtistMap', async function(req, res){\n  const numArtists = req.body.numRelated;\n\n  const artist1 = await findArtist(req.body.artist1, req.body.token);\n  const relatedArtists1 = await getRelatedArtist(artist1.id, req.body.token);\n\n  const artist2 = await findArtist(req.body.artist2, req.body.token);\n  const relatedArtists2 = await getRelatedArtist(artist2.id, req.body.token);\n\n  const sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, numArtists);\n  const sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, numArtists);\n  const retJSON = {\"artist1\": artist1, \"related1\" : sortedRelatedArtist1, \"artist2\" : artist2, \"related2\": sortedRelatedArtist2};\n  console.log(retJSON);\n  res.send(retJSON);\n});\n\napp.post('/expandArtistMap', async function(req, res){\n  const numArtists = req.body.numRelated;\n\n  const artist1ID = req.body.artist1ID;\n  const artist1 = await getArtistFromID(artist1ID, req.body.token);\n  const relatedArtists1 = await getRelatedArtist(artist1ID, req.body.token);\n\n  const artist2ID = req.body.artist2ID;\n  const artist2 = await getArtistFromID(artist2ID, req.body.token);\n  const relatedArtists2 = await getRelatedArtist(artist2ID, req.body.token);\n\n  const sortedRelatedArtist1 = sortTopRelatedArtists(artist2, relatedArtists1, numArtists*2);\n  const sortedRelatedArtist2 = sortTopRelatedArtists(artist1, relatedArtists2, numArtists*2);\n\n  const retJSON = {\"related1\" : sortedRelatedArtist1, \"related2\": sortedRelatedArtist2};\n  console.log(retJSON);\n  res.send(retJSON);\n});\n\napp.get('*', (req, res)=> {\n  res.sendFile(path.join(__dirname+'build/index.html'));\n});\n\napp.listen(8000, ()=> console.log(\"listening on 8000\"));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1589421598008
  }
}